{"pageProps":{"note":{"id":"4b497d1vn38zxs2m2nq2cqz","title":"Kevinslin","desc":"","updated":1662052378124,"created":1662050832023,"custom":{},"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js.kevinslin","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"},"contentHash":"1fac6f0d902100a9b3744c3d3c785040","links":[],"anchors":{"notes-by-kevin":{"type":"header","text":"Notes by kevin","value":"notes-by-kevin","line":8,"column":0,"depth":3}},"children":[],"parent":"ian-sutherland","data":{}},"body":"<h1 id=\"kevinslin\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#kevinslin\"></a>Kevinslin</h1>\n<h3 id=\"notes-by-kevin\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes-by-kevin\"></a>Notes by <a href=\"https://github.com/kevinslin\">kevin</a></h3>\n<ul>\n<li>\n<p>cli apps</p>\n<ul>\n<li>stuff that runs on the terminal</li>\n</ul>\n</li>\n<li>\n<p>features</p>\n<ul>\n<li>options (eg. <code>ls</code>)</li>\n<li>subcommands (eg. <code>git</code>)</li>\n</ul>\n</li>\n<li>\n<p>why node</p>\n<ul>\n<li>scripting language</li>\n<li>good at json, parallel task, network request, etc</li>\n<li>lots of packages</li>\n</ul>\n</li>\n<li>\n<p>dependencies</p>\n<ul>\n<li>other code (eg. library)</li>\n<li>node does not have big standard lib</li>\n</ul>\n</li>\n<li>\n<p>are deps bad?</p>\n<ul>\n<li>depends</li>\n<li>does introduce overhead</li>\n<li>you can bundle to make it better</li>\n</ul>\n</li>\n<li>\n<p>new syntax</p>\n<ul>\n<li>using <code>import</code> (es module)</li>\n<li>import nodejs internals with <code>node:</code> prefix\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">fs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs\"</span>\n</code></pre>\n</li>\n<li>every npm name is taken, we couldn't add anything new, hence new namepsace</li>\n</ul>\n</li>\n<li>\n<p>argument parsing</p>\n<ul>\n<li>old way:\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// get everything from STDIN, split by whitespace</span>\n<span class=\"token comment\">// eg. [node, mycli, --ls]</span>\n<span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">argv</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>argument parsing</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>parseArgs<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:util\"</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">argv</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token literal-property property\">silent</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'boolean'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">short</span><span class=\"token operator\">:</span> <span class=\"token string\">'s'</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>values<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">parseArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n</code></pre>\n</li>\n<li>\n<p>fetch</p>\n<ul>\n<li>make http request</li>\n<li>its available in <strong>node 18</strong></li>\n<li>built on top of undici (http/1.1 client)</li>\n<li>has web streams api</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// available globally</span>\n<span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// you get JSON</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token spread operator\">...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>demo to add new git subcommand the old way</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// very long example</span>\n<span class=\"token comment\">// ...</span>\n</code></pre>\n</li>\n<li>\n<p>demo with new way</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// very short example (less than 10 lines)</span>\n<span class=\"token comment\">// ...</span>\n</code></pre>\n</li>\n<li>\n<p>test runner</p>\n<ul>\n<li>basic api to do this</li>\n<li>eg. mocha but builtin to node</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">test</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"...\"</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"synchornous test\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// also works async</span>\n</code></pre>\n</li>\n<li>\n<p>recursive file system ops</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>rm<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n\n<span class=\"token comment\">// experimental </span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>cp<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n\n<span class=\"token comment\">// doesn't exist yet, open pr</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>readdir<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n</code></pre>\n</li>\n<li>\n<p>whats next</p>\n<blockquote>\n<p>DISCLAIMER: complete speculation</p>\n</blockquote>\n<ul>\n<li>glob?</li>\n<li>self contained executable</li>\n<li>typescript (lol - i wish)</li>\n</ul>\n</li>\n</ul>","noteIndex":{"id":"7ifn0jqm45dvq2e5wc6xjo2","title":"CascadiaJS 2022 Notes","desc":"","updated":1662079016319,"created":1661807247613,"custom":{"nav_order":0,"permalink":"/"},"fname":"home","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"},"contentHash":"d1bb9cdb81f32f409b0b1e63e8568150","links":[{"type":"wiki","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.raffle","alias":"raffle","position":{"start":{"line":29,"column":206,"offset":2150},"end":{"line":29,"column":228,"offset":2172},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"home.raffle"}},{"type":"ref","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.user-survey","position":{"start":{"line":3,"column":1,"offset":145},"end":{"line":3,"column":29,"offset":173},"indent":[]},"xvault":false,"to":{"fname":"home.user-survey","anchorHeader":"^begin"}},{"type":"ref","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.contributing","position":{"start":{"line":31,"column":1,"offset":2195},"end":{"line":31,"column":38,"offset":2232},"indent":[]},"xvault":false,"to":{"fname":"home.contributing","anchorHeader":"adding-notes,1"}}],"anchors":{"find-speakers-and-talks":{"type":"header","text":"Find speakers and talks","value":"find-speakers-and-talks","line":19,"column":0,"depth":2},"by-browsing":{"type":"header","text":"By Browsing","value":"by-browsing","line":21,"column":0,"depth":3},"by-lookup":{"type":"header","text":"By Lookup","value":"by-lookup","line":25,"column":0,"depth":3},"take-notes":{"type":"header","text":"Take notes","value":"take-notes","line":29,"column":0,"depth":2},"share-the-knowledge":{"type":"header","text":"Share the knowledge","value":"share-the-knowledge","line":33,"column":0,"depth":2},"be-part-of-the-conversation":{"type":"header","text":"Be part of the conversation","value":"be-part-of-the-conversation","line":39,"column":0,"depth":2},"about-us":{"type":"header","text":"About Us","value":"about-us","line":45,"column":0,"depth":2}},"children":["x84sn91kbhdc7wwc58m3ho0","lqwv7e0y39yfgymvysmgiv5","ldxrdo88lbrvvonrnfuu9h5","p0qokuilv2xqvlct6m0lx3l"],"parent":null,"data":{},"body":"\n> Coming to the [Cascadia Startup Fair](https://2022.cascadiajs.com/conference/startup-fair)? Consider filling out the 2min Dendron PKM survey!\n![[home.user-survey#^begin]]\n\nWelcome traveler! You've arrived at the [Dendron](https://www.dendron.so/) workspace for [CascadiaJS 2022](https://2022.cascadiajs.com/)! Dendron is the open source knowledge base for developers. All pages here are published from plaintext markdown and managed using git and GitHub.\n\nYou can fork the [GitHub repo](https://github.com/dendronhq/cascadia-js-2022) to get offline access to all the talks of CascadiaJS 2022. \nIf you open this workspace using [VSCode](https://code.visualstudio.com/), you can use Dendron to navigate these notes as well as to add your own. \n\n![Dendron Workspace](https://ik.imagekit.io/fpjzhqpv1/Fullscreen_8_29_22__6_01_PM_-rO3FY3p9.png?ik-sdk-version=javascript-1.4.3&updatedAt=1661821303348)\n\n\n## Find speakers and talks\n\n### By Browsing\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/b9b0e77e4c204550852fd372d3d9e0af\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n### By Lookup\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/fa72444c2925431fb3e98971356fa590\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Take notes\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/2ba14ecbbf9543b8a0866c3aaf55e1fb\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Share the knowledge\n\nIf you feel inclined, you can also contribute your notes on talks back to this workspace by creating a pull request. Not only will this help others, every accepted pull request will also be entered into a [[raffle|home.raffle]] for an **iPad Air**!\n\n![[home.contributing#adding-notes,1]]\n\n## Be part of the conversation\n\nEvery talk has a discussions thread underneath powered by [GitHub discussions](https://giscus.app/). You can use this space to show speakers your appreciation and give feedback!\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/192095840b604cf8a2e79c78b1899572\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## About Us\nDendron is a YC backed startup that wants to help **humans organize information at scale**.  We are participating in the CascadiaJS [Startup Fair](https://2022.cascadiajs.com/conference/startup-fair#dendron) - please drop by to say hi and pick up stickers and goodies!\n\n> \"We are overwhelmed with information and we don't have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\" - Vannevar Bush, 1945\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteUrl":"https://cascadiajs.dendron.so","siteIndex":"home","siteHierarchies":["home","talk","tags"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"CascadiaJS 2022 Conference","description":"Notes about the cascadiajs 2022 conference"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"edit","editRepository":"https://github.com/dendronhq/cascadia-js-2022"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"giscus":{"id":"comments","repo":"dendronhq/cascadia-js-2022","repoId":"R_kgDOH5vYkQ","category":"Announcements","categoryId":"DIC_kwDOH5vYkc4CRHwm","mapping":"pathname","theme":"preferred_color_scheme","strict":0,"reactionsEnabled":1,"emitMetadata":0,"inputPosition":"top","lang":"en","loading":"lazy"},"logoPath":"logo.png","ga":{"tracking":"G-VFTZJ909T3"},"siteFaviconPath":"favicon.ico"}}},"__N_SSG":true}