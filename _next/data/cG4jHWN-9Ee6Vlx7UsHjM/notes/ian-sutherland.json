{"pageProps":{"note":{"id":"ian-sutherland","title":"Zero-dependency CLIs with Node.js","desc":"","updated":1662056647110,"created":1661898027712,"tags":["node-js","cli","javascript"],"location":"Calgary, AB, Canada","uri":"","twitter":"iansu","company":"Neo Financial","pronouns":"he/him/his","enableGiscus":true,"custom":{"location":"Calgary, AB, Canada","uri":"","twitter":"iansu","company":"Neo Financial","pronouns":"he/him/his","enableGiscus":true},"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"},"contentHash":"154d03df9c7854e50f96499b20e676be","links":[{"type":"frontmatterTag","from":{"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js","id":"ian-sutherland","vaultName":"cascadia-js-2022"},"value":"tags.node-js","alias":"node-js","xvault":false,"to":{"fname":"tags.node-js"}},{"type":"frontmatterTag","from":{"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js","id":"ian-sutherland","vaultName":"cascadia-js-2022"},"value":"tags.cli","alias":"cli","xvault":false,"to":{"fname":"tags.cli"}},{"type":"frontmatterTag","from":{"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js","id":"ian-sutherland","vaultName":"cascadia-js-2022"},"value":"tags.javascript","alias":"javascript","xvault":false,"to":{"fname":"tags.javascript"}},{"type":"ref","from":{"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js","id":"ian-sutherland","vaultName":"cascadia-js-2022"},"value":"talk.ian-sutherland-zero-dependency-clis-with-node-js.*","position":{"start":{"line":15,"column":1,"offset":633},"end":{"line":15,"column":61,"offset":693},"indent":[]},"xvault":false,"to":{"fname":"talk.ian-sutherland-zero-dependency-clis-with-node-js.*"}},{"from":{"id":"qwdt0khxbevqlbrp67nay4w","fname":"talk","vaultName":"cascadia-js-2022"},"type":"backlink","position":{"start":{"line":17,"column":3,"offset":1056},"end":{"line":17,"column":94,"offset":1147},"indent":[]},"value":"talk.ian-sutherland-zero-dependency-clis-with-node-js","alias":"Zero-dependency CLIs with Node.js"}],"anchors":{"overview":{"type":"header","text":"Overview","value":"overview","line":19,"column":0,"depth":2},"abstract":{"type":"header","text":"Abstract","value":"abstract","line":25,"column":0,"depth":2},"notes":{"type":"header","text":"Notes","value":"notes","line":29,"column":0,"depth":2}},"children":["g9dnm5ogxwo4ehkjhzkaw4r","qw65fj10qz0hw8aqu1255aq","4b497d1vn38zxs2m2nq2cqz"],"parent":"qwdt0khxbevqlbrp67nay4w","data":{}},"body":"<h1 id=\"zero-dependency-clis-with-nodejs\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#zero-dependency-clis-with-nodejs\"></a>Zero-dependency CLIs with Node.js</h1>\n<blockquote>\n<p>The contents here is created from the official <a href=\"https://2022.cascadiajs.com/speakers/ian-sutherland\">CascadiaJS Page</a></p>\n</blockquote>\n<h2 id=\"overview\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#overview\"></a>Overview</h2>\n<p><img src=\"https://create-4jr.begin.app/_static/2022/ian-sutherland.jpg\" alt=\"Ian Sutherland image\" style=\"max-width:300px;\"></p>\n<ul>\n<li>name: Ian Sutherland</li>\n<li><a href=\"https://2022.cascadiajs.com/speakers/ian-sutherland\">Speaker Page</a></li>\n</ul>\n<h2 id=\"abstract\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#abstract\"></a>Abstract</h2>\n<p>Node.js is a popular choice for building dev tools and some recently added features make it possible to build powerful tools without any external dependencies. We’ll look at these new features and show how to use them to build a custom CLI app with zero external dependencies.</p>\n<h2 id=\"notes\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes\"></a>Notes</h2>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Aminamos</span></div>\n<a href=\"/notes/g9dnm5ogxwo4ehkjhzkaw4r\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"notes-by-aminamos\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes-by-aminamos\"></a>Notes by <a href=\"https://github.com/aminamos\">aminamos</a></h2>\n<ul>\n<li>topics\n<ul>\n<li>what is a cli</li>\n<li>what are dependencies, why avoid them</li>\n<li>what helps us write cli apps</li>\n<li>new upcoming nodejs features </li>\n</ul>\n</li>\n<li>CLIs use flags/options</li>\n<li>why build with node?\n<ul>\n<li>usually a language your team is already familiar with</li>\n<li>JSON data operations, network requests are pretty well supported</li>\n<li>node has a package ecosystem (useful when needed, still avoid when possible)</li>\n</ul>\n</li>\n<li>dependencies\n<ul>\n<li>code that your program needs to run</li>\n<li>all users of your app will need to install dependencies</li>\n<li>smaller apps, like  CLIs, not having an install or build step makes setup, contributing, and distribution easier</li>\n</ul>\n</li>\n<li>new node syntax\n<ul>\n<li>import instead of require</li>\n<li>ESM instead of CJS</li>\n</ul>\n</li>\n<li>argument parsing\n<ul>\n<li>this process is surprisingly complicated</li>\n<li><a href=\"https://nodejs.org/docs/latest/api/process.html#processargv\">https://nodejs.org/docs/latest/api/process.html#processargv</a></li>\n<li>third party library like yargs or commander, in the past</li>\n<li>parseArgs is ~the future~ as of node 18.3 (potentially backported to node 16)\n<ul>\n<li>polyfill proposal for util.parseArgs() - <a href=\"https://www.npmjs.com/package/@pkgjs/parseargs\">https://www.npmjs.com/package/@pkgjs/parseargs</a></li>\n<li>doesn't support all previous functionality, but useful error messages</li>\n<li><a href=\"https://nodejs.org/api/util.html#utilparseargsconfig\">https://nodejs.org/api/util.html#utilparseargsconfig</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>fetch\n<ul>\n<li>before fetch, had to do a lot of pre-work to setup, run, and handle http requests</li>\n<li>with fetch you can just <code>await fetch()</code> and return the body/errors</li>\n<li><code>git blast</code> is real <a href=\"https://github.com/iansu/git-blast\">https://github.com/iansu/git-blast</a></li>\n</ul>\n</li>\n<li>test runner\n<ul>\n<li><a href=\"https://nodejs.org/api/test.html#test-runner\">https://nodejs.org/api/test.html#test-runner</a></li>\n</ul>\n</li>\n<li>recursive file system operations\n<ul>\n<li><a href=\"https://nodejs.org/api/fs.html#fspromisesmkdirpath-options\">https://nodejs.org/api/fs.html#fspromisesmkdirpath-options</a></li>\n<li><a href=\"https://nodejs.org/api/fs.html#fspromisesrmpath-options\">https://nodejs.org/api/fs.html#fspromisesrmpath-options</a></li>\n<li>recursive copy</li>\n</ul>\n</li>\n<li>wild speculation\n<ul>\n<li>self contained executibles</li>\n<li>glob</li>\n<li>typescript <code>node index.ts</code></li>\n</ul>\n</li>\n<li>what's next, ways to contribute\n<ul>\n<li>join node tooling group <a href=\"https://github.com/nodejs/tooling\">https://github.com/nodejs/tooling</a></li>\n</ul>\n</li>\n</ul>\n</div></div><p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Hunt</span></div>\n<a href=\"/notes/qw65fj10qz0hw8aqu1255aq\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><ul>\n<li>Neo Financial, Head of DEX and OSS</li>\n<li>twitter <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">@iansu (Private)</a></li>\n<li>flags\n<ul>\n<li><code>-l1</code> or <code>-l -1</code> Short options</li>\n<li><code>--color</code> Long options</li>\n</ul>\n</li>\n<li>subcommands\n<ul>\n<li>the <code>status</code> in <code>git status</code></li>\n</ul>\n</li>\n<li>\"CLI is serious 80s vibes\"</li>\n<li>Node has a small core which is why there are lots of dependencies installed with <code>npm</code> for a given project like <code>isNumber</code>.</li>\n<li>Bundling isn't the best because it can still result in a large bundle size.</li>\n<li><code>type: module</code> to package.json to use <code>import</code> and ESMM or us <code>.mjs</code> (as opposed to <code>.cjs</code>).</li>\n<li>import Node.js internals with <code>node:</code>\n<ul>\n<li>eg, <code>import fs from 'node:fs'</code></li>\n</ul>\n</li>\n<li>There are many different ways to set arguments in a cli</li>\n<li>parseArgs: <code>process.argv</code> -> Tedious so use <code>yargs</code> of <code>commander</code>.\n<ul>\n<li>NOT TEDIOUS ANYMORE!  <code>parseArgs from 'node:util'</code> uses <code>process.argsv</code>\n<ul>\n<li>declare the options (kind of like commander)</li>\n</ul>\n</li>\n<li>has polyfill, will be \"backboarded\" to v16</li>\n</ul>\n</li>\n<li>fetch: now available in node@18\n<ul>\n<li>Built on top of Undici (HTTP/1.1)</li>\n</ul>\n</li>\n<li>see <code>iansu/git-blast</code> on github to run git blast and see people's twitter handle's if supplied on githu</li>\n<li>node@18 now has a basic test runner.\n<ul>\n<li>don't necessarily need jest anymore.</li>\n<li><code>node --test</code></li>\n</ul>\n</li>\n<li>recursive mkdir function with <code>{recursive: true}</code></li>\n<li>recursive rm operation <code>{recursive: true, force: true}</code></li>\n<li>recursive cp (same as mkdir) **experimental</li>\n<li>readdir **open pr, not merged</li>\n<li>Speculation of what's next\n<ul>\n<li>glob patterns</li>\n<li>self contained executables</li>\n<li>native typescript (aka deno)</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/nodejs/tooling\">build the future</a></p>\n</div></div><p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Kevinslin</span></div>\n<a href=\"/notes/4b497d1vn38zxs2m2nq2cqz\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h3 id=\"notes-by-kevin\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#notes-by-kevin\"></a>Notes by <a href=\"https://github.com/kevinslin\">kevin</a></h3>\n<ul>\n<li>\n<p>cli apps</p>\n<ul>\n<li>stuff that runs on the terminal</li>\n</ul>\n</li>\n<li>\n<p>features</p>\n<ul>\n<li>options (eg. <code>ls</code>)</li>\n<li>subcommands (eg. <code>git</code>)</li>\n</ul>\n</li>\n<li>\n<p>why node</p>\n<ul>\n<li>scripting language</li>\n<li>good at json, parallel task, network request, etc</li>\n<li>lots of packages</li>\n</ul>\n</li>\n<li>\n<p>dependencies</p>\n<ul>\n<li>other code (eg. library)</li>\n<li>node does not have big standard lib</li>\n</ul>\n</li>\n<li>\n<p>are deps bad?</p>\n<ul>\n<li>depends</li>\n<li>does introduce overhead</li>\n<li>you can bundle to make it better</li>\n</ul>\n</li>\n<li>\n<p>new syntax</p>\n<ul>\n<li>using <code>import</code> (es module)</li>\n<li>import nodejs internals with <code>node:</code> prefix\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">fs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs\"</span>\n</code></pre>\n</li>\n<li>every npm name is taken, we couldn't add anything new, hence new namepsace</li>\n</ul>\n</li>\n<li>\n<p>argument parsing</p>\n<ul>\n<li>old way:\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// get everything from STDIN, split by whitespace</span>\n<span class=\"token comment\">// eg. [node, mycli, --ls]</span>\n<span class=\"token keyword\">const</span> args <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">argv</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>argument parsing</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>parseArgs<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:util\"</span>\n<span class=\"token keyword\">const</span> input <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">argv</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token literal-property property\">silent</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'boolean'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">short</span><span class=\"token operator\">:</span> <span class=\"token string\">'s'</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>values<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">parseArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n</code></pre>\n</li>\n<li>\n<p>fetch</p>\n<ul>\n<li>make http request</li>\n<li>its available in <strong>node 18</strong></li>\n<li>built on top of undici (http/1.1 client)</li>\n<li>has web streams api</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// available globally</span>\n<span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// you get JSON</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token spread operator\">...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</li>\n<li>\n<p>demo to add new git subcommand the old way</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// very long example</span>\n<span class=\"token comment\">// ...</span>\n</code></pre>\n</li>\n<li>\n<p>demo with new way</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// very short example (less than 10 lines)</span>\n<span class=\"token comment\">// ...</span>\n</code></pre>\n</li>\n<li>\n<p>test runner</p>\n<ul>\n<li>basic api to do this</li>\n<li>eg. mocha but builtin to node</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\">test</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"...\"</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"synchornous test\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">t</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// also works async</span>\n</code></pre>\n</li>\n<li>\n<p>recursive file system ops</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>rm<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n\n<span class=\"token comment\">// experimental </span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>cp<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n\n<span class=\"token comment\">// doesn't exist yet, open pr</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span>readdir<span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"node:fs/promises\"</span>\n</code></pre>\n</li>\n<li>\n<p>whats next</p>\n<blockquote>\n<p>DISCLAIMER: complete speculation</p>\n</blockquote>\n<ul>\n<li>glob?</li>\n<li>self contained executable</li>\n<li>typescript (lol - i wish)</li>\n</ul>\n</li>\n</ul></div></div><p></p><p></p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/g9dnm5ogxwo4ehkjhzkaw4r\">Aminamos</a></li>\n<li><a href=\"/notes/qw65fj10qz0hw8aqu1255aq\">Hunt</a></li>\n<li><a href=\"/notes/4b497d1vn38zxs2m2nq2cqz\">Kevinslin</a></li>\n</ol>\n<h2 id=\"tags\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a>Tags</h2>\n<ol>\n<li><a class=\"color-tag\" style=\"--tag-color: #0485d1;\" href=\"/notes/node-js\">node-js</a></li>\n<li><a class=\"color-tag\" style=\"--tag-color: #044a05;\" href=\"/notes/cli\">cli</a></li>\n<li><a class=\"color-tag\" style=\"--tag-color: #696006;\" href=\"/notes/javascript\">javascript</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/qwdt0khxbevqlbrp67nay4w\">Talks</a></li>\n</ul>","noteIndex":{"id":"7ifn0jqm45dvq2e5wc6xjo2","title":"CascadiaJS 2022 Notes","desc":"","updated":1662079016319,"created":1661807247613,"custom":{"nav_order":0,"permalink":"/"},"fname":"home","type":"note","vault":{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"},"contentHash":"d1bb9cdb81f32f409b0b1e63e8568150","links":[{"type":"wiki","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.raffle","alias":"raffle","position":{"start":{"line":29,"column":206,"offset":2150},"end":{"line":29,"column":228,"offset":2172},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"home.raffle"}},{"type":"ref","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.user-survey","position":{"start":{"line":3,"column":1,"offset":145},"end":{"line":3,"column":29,"offset":173},"indent":[]},"xvault":false,"to":{"fname":"home.user-survey","anchorHeader":"^begin"}},{"type":"ref","from":{"fname":"home","id":"7ifn0jqm45dvq2e5wc6xjo2","vaultName":"cascadia-js-2022"},"value":"home.contributing","position":{"start":{"line":31,"column":1,"offset":2195},"end":{"line":31,"column":38,"offset":2232},"indent":[]},"xvault":false,"to":{"fname":"home.contributing","anchorHeader":"adding-notes,1"}}],"anchors":{"find-speakers-and-talks":{"type":"header","text":"Find speakers and talks","value":"find-speakers-and-talks","line":19,"column":0,"depth":2},"by-browsing":{"type":"header","text":"By Browsing","value":"by-browsing","line":21,"column":0,"depth":3},"by-lookup":{"type":"header","text":"By Lookup","value":"by-lookup","line":25,"column":0,"depth":3},"take-notes":{"type":"header","text":"Take notes","value":"take-notes","line":29,"column":0,"depth":2},"share-the-knowledge":{"type":"header","text":"Share the knowledge","value":"share-the-knowledge","line":33,"column":0,"depth":2},"be-part-of-the-conversation":{"type":"header","text":"Be part of the conversation","value":"be-part-of-the-conversation","line":39,"column":0,"depth":2},"about-us":{"type":"header","text":"About Us","value":"about-us","line":45,"column":0,"depth":2}},"children":["x84sn91kbhdc7wwc58m3ho0","lqwv7e0y39yfgymvysmgiv5","ldxrdo88lbrvvonrnfuu9h5","p0qokuilv2xqvlct6m0lx3l"],"parent":null,"data":{},"body":"\n> Coming to the [Cascadia Startup Fair](https://2022.cascadiajs.com/conference/startup-fair)? Consider filling out the 2min Dendron PKM survey!\n![[home.user-survey#^begin]]\n\nWelcome traveler! You've arrived at the [Dendron](https://www.dendron.so/) workspace for [CascadiaJS 2022](https://2022.cascadiajs.com/)! Dendron is the open source knowledge base for developers. All pages here are published from plaintext markdown and managed using git and GitHub.\n\nYou can fork the [GitHub repo](https://github.com/dendronhq/cascadia-js-2022) to get offline access to all the talks of CascadiaJS 2022. \nIf you open this workspace using [VSCode](https://code.visualstudio.com/), you can use Dendron to navigate these notes as well as to add your own. \n\n![Dendron Workspace](https://ik.imagekit.io/fpjzhqpv1/Fullscreen_8_29_22__6_01_PM_-rO3FY3p9.png?ik-sdk-version=javascript-1.4.3&updatedAt=1661821303348)\n\n\n## Find speakers and talks\n\n### By Browsing\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/b9b0e77e4c204550852fd372d3d9e0af\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n### By Lookup\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/fa72444c2925431fb3e98971356fa590\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Take notes\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/2ba14ecbbf9543b8a0866c3aaf55e1fb\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Share the knowledge\n\nIf you feel inclined, you can also contribute your notes on talks back to this workspace by creating a pull request. Not only will this help others, every accepted pull request will also be entered into a [[raffle|home.raffle]] for an **iPad Air**!\n\n![[home.contributing#adding-notes,1]]\n\n## Be part of the conversation\n\nEvery talk has a discussions thread underneath powered by [GitHub discussions](https://giscus.app/). You can use this space to show speakers your appreciation and give feedback!\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/192095840b604cf8a2e79c78b1899572\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## About Us\nDendron is a YC backed startup that wants to help **humans organize information at scale**.  We are participating in the CascadiaJS [Startup Fair](https://2022.cascadiajs.com/conference/startup-fair#dendron) - please drop by to say hi and pick up stickers and goodies!\n\n> \"We are overwhelmed with information and we don't have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\" - Vannevar Bush, 1945\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"cascadia-js-2022"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteUrl":"https://cascadiajs.dendron.so","siteIndex":"home","siteHierarchies":["home","talk","tags"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"CascadiaJS 2022 Conference","description":"Notes about the cascadiajs 2022 conference"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"edit","editRepository":"https://github.com/dendronhq/cascadia-js-2022"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"giscus":{"id":"comments","repo":"dendronhq/cascadia-js-2022","repoId":"R_kgDOH5vYkQ","category":"Announcements","categoryId":"DIC_kwDOH5vYkc4CRHwm","mapping":"pathname","theme":"preferred_color_scheme","strict":0,"reactionsEnabled":1,"emitMetadata":0,"inputPosition":"top","lang":"en","loading":"lazy"},"logoPath":"logo.png","ga":{"tracking":"G-VFTZJ909T3"},"siteFaviconPath":"favicon.ico"}}},"__N_SSG":true}