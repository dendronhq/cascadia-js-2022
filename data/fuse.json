{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Tags","n":1}}},{"i":2,"$":{"0":{"v":"webxr","n":1}}},{"i":3,"$":{"0":{"v":"webrtc","n":1}}},{"i":4,"$":{"0":{"v":"webauthn","n":1}}},{"i":5,"$":{"0":{"v":"webassembly","n":1}}},{"i":6,"$":{"0":{"v":"web3","n":1}}},{"i":7,"$":{"0":{"v":"web","n":1}}},{"i":8,"$":{"0":{"v":"web components","n":0.707}}},{"i":9,"$":{"0":{"v":"vm design","n":0.707}}},{"i":10,"$":{"0":{"v":"virtual reality","n":0.707}}},{"i":11,"$":{"0":{"v":"V8","n":1}}},{"i":12,"$":{"0":{"v":"typography","n":1}}},{"i":13,"$":{"0":{"v":"typescript","n":1}}},{"i":14,"$":{"0":{"v":"ssr","n":1}}},{"i":15,"$":{"0":{"v":"sqlite","n":1}}},{"i":16,"$":{"0":{"v":"software supply chain","n":0.577}}},{"i":17,"$":{"0":{"v":"side projects","n":0.707}}},{"i":18,"$":{"0":{"v":"shadow classes","n":0.707}}},{"i":19,"$":{"0":{"v":"serverless","n":1}}},{"i":20,"$":{"0":{"v":"security","n":1}}},{"i":21,"$":{"0":{"v":"sdk","n":1}}},{"i":22,"$":{"0":{"v":"redis","n":1}}},{"i":23,"$":{"0":{"v":"react.js","n":1}}},{"i":24,"$":{"0":{"v":"python","n":1}}},{"i":25,"$":{"0":{"v":"pwa","n":1}}},{"i":26,"$":{"0":{"v":"profiling","n":1}}},{"i":27,"$":{"0":{"v":"postgres","n":1}}},{"i":28,"$":{"0":{"v":"ocap","n":1}}},{"i":29,"$":{"0":{"v":"npm","n":1}}},{"i":30,"$":{"0":{"v":"node.js","n":1}}},{"i":31,"$":{"0":{"v":"mongodb","n":1}}},{"i":32,"$":{"0":{"v":"microservices","n":1}}},{"i":33,"$":{"0":{"v":"memory leaks","n":0.707}}},{"i":34,"$":{"0":{"v":"low code","n":0.707}}},{"i":35,"$":{"0":{"v":"layout","n":1}}},{"i":36,"$":{"0":{"v":"javascript","n":1}}},{"i":37,"$":{"0":{"v":"jamstack","n":1}}},{"i":38,"$":{"0":{"v":"ipfs","n":1}}},{"i":39,"$":{"0":{"v":"iot","n":1}}},{"i":40,"$":{"0":{"v":"inclusivity","n":1}}},{"i":41,"$":{"0":{"v":"inclusiveness","n":1}}},{"i":42,"$":{"0":{"v":"images","n":1}}},{"i":43,"$":{"0":{"v":"identity","n":1}}},{"i":44,"$":{"0":{"v":"hosting","n":1}}},{"i":45,"$":{"0":{"v":"hiring","n":1}}},{"i":46,"$":{"0":{"v":"hardware","n":1}}},{"i":47,"$":{"0":{"v":"fwa","n":1}}},{"i":48,"$":{"0":{"v":"functional programming","n":0.707}}},{"i":49,"$":{"0":{"v":"formal methods","n":0.707}}},{"i":50,"$":{"0":{"v":"figma","n":1}}},{"i":51,"$":{"0":{"v":"engineering career growth","n":0.577}}},{"i":52,"$":{"0":{"v":"ecmascript","n":1}}},{"i":53,"$":{"0":{"v":"diversity","n":1}}},{"i":54,"$":{"0":{"v":"distributed systems","n":0.707}}},{"i":55,"$":{"0":{"v":"design","n":1}}},{"i":56,"$":{"0":{"v":"design systems","n":0.707}}},{"i":57,"$":{"0":{"v":"design patterns","n":0.707}}},{"i":58,"$":{"0":{"v":"deno","n":1}}},{"i":59,"$":{"0":{"v":"cryptography","n":1}}},{"i":60,"$":{"0":{"v":"components","n":1}}},{"i":61,"$":{"0":{"v":"component libraries","n":0.707}}},{"i":62,"$":{"0":{"v":"community","n":1}}},{"i":63,"$":{"0":{"v":"commonjs","n":1}}},{"i":64,"$":{"0":{"v":"cognitive biases","n":0.707}}},{"i":65,"$":{"0":{"v":"code signing","n":0.707}}},{"i":66,"$":{"0":{"v":"cloud services","n":0.707}}},{"i":67,"$":{"0":{"v":"cli","n":1}}},{"i":68,"$":{"0":{"v":"chrome","n":1}}},{"i":69,"$":{"0":{"v":"cdns","n":1}}},{"i":70,"$":{"0":{"v":"canvas","n":1}}},{"i":71,"$":{"0":{"v":"biometric","n":1}}},{"i":72,"$":{"0":{"v":"auth","n":1}}},{"i":73,"$":{"0":{"v":"augmented reality","n":0.707}}},{"i":74,"$":{"0":{"v":"api","n":1}}},{"i":75,"$":{"0":{"v":"animation","n":1}}},{"i":76,"$":{"0":{"v":"Talks","n":1},"1":{"v":"\nAll speakers and talks\n\n## Talks in Order (with notes)\n- [[The Web is Good Now|talk.chris-coyier-the-web-is-good-now]]\n- [[Enhance your Functional Web Apps with Web Components|talk.brian-leroux-enhance-your-functional-web-apps-with-web-components]]\n\n- [[Rethinking Web UX with Webauthn and Project Fugu|talk.joyce-park-rethinking-web-ux-with-webauthn-and-project-fugu]]\n- [[Doing Data as a Frontend Developer|talk.tejas-kumar-doing-data-as-a-frontend-developer]]\n- [[The 90s Called and They Want Their Websites Back|talk.rachel-white-the-90s-called-and-they-want-their-websites-back]]\n\n- [[Publishing in the JavaScript Ecosystem & Keeping Users Happy|talk.trivikram-kamat-publishing-in-the-javascript-ecosystem-&-keeping-users-happy]]\n- [[Cryptography Isn't Scary|talk.eddie-zaneski-cryptography-isn't-scary]]\n- [[Reverse Engineering a Private API|talk.joyce-lin-reverse-engineering-a-private-api]]\n\n- [[Join the super secret V8 club and become a JavaScriptbender|talk.vladimir-de-turckheim-join-the-super-secret-v8-club-and-become-a-javascriptbender]]\n- [[Zero-dependency CLIs with Node.js|talk.ian-sutherland-zero-dependency-clis-with-node-js]]\n\n- [[Creating a WebXR Tic-Tac-Toe game with Voice Chat on the Code of Giants|talk.dwane-hemmings-creating-a-webxr-tic-tac-toe-game-with-voice-chat-on-the-code-of-giants]]\n- [[Making tech careers accessible for everyone|talk.brittany-joiner-making-tech-careers-accessible-for-everyone]]\n- [[How We Automated our Relationship|talk.daphne-liu-how-we-automated-our-relationship]]\n\n- [[A Few Good Design Patterns|talk.saimon-sharif-a-few-good-design-patterns]]\n- [[Creating a WebXR Tic-Tac-Toe game with Voice Chat on the Code of Giants|talk.dwane-hemmings-creating-a-webxr-tic-tac-toe-game-with-voice-chat-on-the-code-of-giants]]\n- [[Learning and Managing Code with Code Notebooks|talk.rebecca-peltz-learning-and-managing-code-with-code-notebooks]]\n## Talks\n![[talk.*]]\n","n":0.089}}},{"i":77,"$":{"0":{"v":"Join the super secret V8 club and become a JavaScriptbender","n":0.316},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/vladimir-de-turckheim)\n\n## Overview\n\n![Vladimir de Turckheim image](https://create-4jr.begin.app/_static/2022/vladimir-de-turckheim.jpg){max-width: 300px}\n- name: Vladimir de Turckheim\n- [Speaker Page](https://2022.cascadiajs.com/speakers/vladimir-de-turckheim)\n\n## Abstract\n\nMultiple features in V8 and Node.js are not fully documented or less known by most users. These features can be used to optimize the execution of code or debug it with superpowers.\n\n## Notes\n\n![[talk.vladimir-de-turckheim-join-the-super-secret-v8-club-and-become-a-javascriptbender.*]]","n":0.135}}},{"i":78,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- javascript engine\n\t- multiple engines: v8, spidermonkey, apple jscriptcore\n- v8 executes js in context\n\t- ecmascript web specs not part of v8\n\t- chromium embeds v8 and provides DOM apis\n\t- node embeds v8 and provides system apis\n\t- ruby racer embeds v8 to call js from ruby\n- v8 does not just interpret js\n\t- many parts\n\t\t- parse, optimization, codegen\n\t\t- turbofan: part that optimize code\n- optimizing\n\t- what v8 mainly optimizes\n\t\t- inlinable functions \n\t\t- function with stable signature\n- functions example\n  - #todo\n- objects example\n\t- getObject 1e6 times\n\t- to optimize object, requires\n\t\t- same fields with same type\n\t\t- types crated in same order\n\t- calling same object initialized with object of different order will stop optimizations\n- native funciton syntax `%`\n\t- run v8 with `--allow-native-syntax`\n\t> TIP: you can set v8 flags inside nodejs\n\t- native syntax are undocumented v8 apis, used for testing and debugging\n\t\t- you can find the v8 source\n\t\t- docs are in v8 tests\n\t- can used to manipulate optimization (eg. never optimize this function)\n\n- what can i do with native functions?\n\n- question1: are optimized functions faster?\n\t- benchmarkjs to test\n- question2: check optimization status of a function within code\n\t- print to debug\n\t- if you keep opt/de-opt function, v8 will give up on your code \n- question3: can i manipulate memory related stuff\n\t- yes, but please do it\n\n- how does devtools work\n\t- chrome debug protocol\n\t\t- websockets\n\t\t- communicate with v8/chromium\n\t\t- access debug interface:\n  \t\t- debugger\n  \t\t- heap profiler\n  \t\t- cpu profiling/code coverage\n  \t\t- dom (browser only)\n\t\t\t- eg. playwright uses this\n\t\t\t- eg. remote debug node\n\t\t- gives access to **everything** in node process\n\n- debug protocol\n  - cpu profiling is polling based\n\t- control polling rate from protocol (not available in dev tools)\n- heap profiler\n\t- show everything in heap\n\t- eg. find memory leak\n\n- why\n\t- remote debugging\n\t- atuomated diagnostics\n\t- script debugging\n\t\t- eg. add breakpoint\n\t\t- execute code and check heap\n\t\t- canbe used in extensions\n\n- other topics\n\t- v8 inlining\n\t- torque language\n\t- v8 treats web assembly\n\t- how v8 manages strings\n\t- etc\n\t- most of this is on https://v8.dev/\n\n## Notes by [aminamos](https://github.com/aminamos)\n- v8 is a JS engine\n    - the engine takes JS code as an input and executes it\n- v8 is one of many engines\n- DOM manipulation APIs are not defined in v8\n- node embeds v8 and has JS APIs\n- v8 is embedded (ruby, deno examples)\n- turbofan, sparkplug, ignition\n- [discussion around code optimiziation, de-optimization, re-optimization]\n- are optimized functions better? yes\n- can I check optimization status of a function in the code? yes\n- chrome debug protocol convo, CPU profiling is polling based (and this rate is configurable)\n- can get heap dump, then dig into info in dev tools (all objects, all streams that are currently alive)\n- other toppics\n    - v8 code inilining, WebAssembly, string management, torque language, v8 snapshots\n    - check out https://v8.dev/\n","n":0.048}}},{"i":79,"$":{"0":{"v":"Hunt","n":1},"1":{"v":"\n@polesdesfetes\n\nStaff engineer at Data Dog.\n\nV8 Engine\n- Takes JS as input and executes it\n- Createed by Google, open source, C++\n    - https://chromium.googlesource.com/v8/v8.git\n- [good resource](https://v8.dev)\n- `document` is not defined in V8\n- Doesn't just interpret JS\n    - Parse to AST\n    - Ignition: bytecode generation\n    - Sparkplug: fast codegen\n    - Turbofan: optimized codegen\n    - reminder you can define numbers as `1_000_000` in js\n        - [underscore in numbers](https://www.javascripttutorial.net/es-next/javascript-numeric-separator/)\n    - objects have a Map, a hidden class.\n    - what is % in fromnt of functions?  It's \"Native syntaxes\". `console.log(%MaxSmi())`\n    - You can set V8 flages with node using `require('v8').setFlags (?) ('--flag')`\n    - Native syntax: undocumented V8 APIs.\n    - Benchmark JS for testing optimizations... optimizations DO matter, up to 2x faster for a simple add function.\n    - `V8OptimizationStoatus()` to get the status of optimization\n    - How do debuggers work?\n        - Chrome Debug Protocol\n            - Has a Heap profiler and CPU profiler\n                - CPU profiling is done with polling, similar to the `top` program (?)\n    - See the Torque language which compiles directly into v8 bytecode. [torque](https://v8.dev/docs/torque)","n":0.077}}},{"i":80,"$":{"0":{"v":"Publishing in the JavaScript Ecosystem & Keeping Users Happy","n":0.333},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/trivikram-kamat)\n\n## Overview\n\n![Trivikram Kamat image](https://create-4jr.begin.app/_static/2022/trivikram-kamat.jpg){max-width: 300px}\n- name: Trivikram Kamat\n- [Speaker Page](https://2022.cascadiajs.com/speakers/trivikram-kamat)\n\n## Abstract\n\nThis talk will cover how your JavaScript package can support various runtimes and module formats, while keeping bundle/publish/install sizes in check and providing types/sources/source-maps.\n\n## Notes\n\n![[talk.trivikram-kamat-publishing-in-the-javascript-ecosystem-&-keeping-users-happy.*]]","n":0.149}}},{"i":81,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- speaker\n\t- three-vikram\n\t- #CascadiaJS\n- publishing\n\t- browsers: \n\t- servers: nodejs, deno, etc\n\t- ns native: react, native, flutter\n\t- module formats: cjs, esm\n\t- sizes: publish, install, bundle\n\t- types: flow, typescript\n\t- debugging: source, sourcemap\n\t- observability: open*, etc\n- criteria to consider\n\t- depends\n- publishing criteria\n\t- why, how, what\n\n- browser, why?\n\t- script on browser\n\t- isn't js support fragmented on browser\n\t- yes but\n\t\t- IE retired in 05/15/2022\n\t\t- safari competitive? (lol)\n\n- server, why\n\t- nodejs most popular\n\t- deno\n\t- fragmentation?\n\t\t- web interoperable runtimes community group\n\n- deno, how?\n\t- experimental npm support\n\n- bun, how?\n\t- compatible?\n\n- js native, why?\n\t- write javascript, ui framework create native apps\n\t- have limitation\n\t- perf tradeoffs, has become better\n\n- module formats, why?\n\t- ...\n\n\n- module formats, how?\n\t- supporting cjs/esm, you can use esm module wrapper\n\t- `gen-esm-wrapper`\n\n- sizes (why)?\n\t- publish: pkg being published\n\t- install: `node_modules` on install\n\t- bundle: bundled artifact\n\n\t- why important?\n\t\t- load times\n\t\t- constrained environments (eg. serverless)\n\n- reducing size\n\t- publish:\n\t\t- remove unecessary things in package.json\n\t\t\t- eg. move types to definitely typed\n\t- install\n\t\t- minimal dependencies\n\t\t- provide variant of pkg for resource-constraint environment\n\t- bundle\n\t\t- tree-shakeable code\n\t\t\t- named exports\n\t\t- publish esm version of pkg\n\t\t- remove side effects\n\n- types (why)\n\t- ts popular\n\t- ecmascript proposal for type annotation\n\n- debugging (why)\n\t- you have a language that compiles to js\n\t\t- source maps for debug\n\n- observability (why)\n\t- help measure state of app\n\n- observability (how)\n\t- add opentelemetry package\n\n- conclusion\n\t- brwoser: support modern browser\n\t- server: nodejs with deno support\n\t- js native: depends\n\t- module formats: cjs+esm or esm only\n\t- sizes: aim small\n\t- types: publish typescript types\n\t- debuggign: provide sources\n\t- observability: add hook to open telemetry","n":0.064}}},{"i":82,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n(starting notes a little late)\n\n- bunch of criteria and it depends.\n\n- Module formats\n    - defines a module\n- Of course we should only support ESM.\n- Package has a carbon footprint depending on the size of the bundle.\n- Reduce publish size\n    - only publish required files with `package.json` 's `files` field.\n- DefinitelyTyped will reduce package size.  _lol_\n- TypeScript dist tags.\n    - You can have a @variant on a package name `@scope/<name>@variant` when exporting a package.\n- Provide ESM version of your package.\n- Smaller modules\n- Tree-shaking.\n\n- Publishing a JS package:\n    - Small package size\n    - Observability with Open Trace (types.d.ts)\n    - Support ESM and Common JS with multiple packages.\n","n":0.098}}},{"i":83,"$":{"0":{"v":"Doing Data as a Frontend Developer","n":0.408},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/tejas-kumar)\n\n## Overview\n\n![Tejas Kumar image](https://create-4jr.begin.app/_static/2022/tejas-kumar.jpg){max-width: 300px}\n- name: Tejas Kumar\n- [Speaker Page](https://2022.cascadiajs.com/speakers/tejas-kumar)\n\n## Abstract\n\nWeb devs are often confused about data. What database do we choose? What are the tradeoffs between NoSQL and MySQL? This talk answers these questions and gives web developers DBA-level skills to help them build with data reliably.\n\n## Notes\n\n![[talk.tejas-kumar-doing-data-as-a-frontend-developer.*]]","n":0.13}}},{"i":84,"$":{"0":{"v":"Kevinlin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- data in the browser, lots of variations\n- backend \n  - aws \n  - sql vs nosql\n  - relational vs non-relationsnal\n\n- relational & acid\n  - atomicity\n  - consistensity\n  - integrity\n  - data partition\n- limitation is scalability\n\n- nosql\n  - great for scale\n  - unstructured\n  - partionable\n\n- base\n  - basically available\n  - soft state \n  - eventual consistency\n\n- new sql\n  - sql & nosql\n  - eg. aurora, fauna\n\n- what to use\n  - it depends\n  - bank deposit: sql\n  - upvotes: nosql\n\n- why not both?\n  - data infrastructure > database\n\n- takeaways\n  - tribalism is bad\n  - integrity good\n  - data > databases","n":0.099}}},{"i":85,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"- adven-Tejas\n  - works at xeta\n- SQL\n  - Has ACID interactions with the database\n    - Atomicity\n    - Consistency (TS at database level)\n    - Isolation\n    - Durability\n- Data Infrastructure > Database\n  - It's more important how you have things setup.  You could move between a relational and a non-relational database.\n  - Search engine is part of data infrastructure.\n- Tribalism is bad.\n\n\n","n":0.129}}},{"i":86,"$":{"0":{"v":"Data as a front end engineer","n":0.408},"1":{"v":"\n### Data as a front end engineer\n\n- Works at zeta\n- Goal is to eliminate imposter syndrome\n\n### SQL or NoSQL?\n\n… relational vs non relational\n\n### SQL\n\nPros\n\n- Declarative\n- Normalization - reduce redundancy\n    - Great for connecting data together\n\nlimitations\n\n- Hard to scale\n\n### NoSQL\n\n- Built for scale\n- Heavily partitionable\n- BASE - response to ACID\n    - Basically available soft state eventually consistent\n    \n\n### NewSQL\n\n- AWS aurora\n- Convenience of sql with scale\n\nYou can use both… relational for current data Non relational for old archival data.","n":0.113}}},{"i":87,"$":{"0":{"v":"Paradigm Lost","n":0.707},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/shawn-swyx-wang)\n\n## Overview\n\n![Shawn (swyx) Wang image](https://create-4jr.begin.app/_static/2022/shawn-swyx-wang.jpg){max-width: 300px}\n- name: Shawn (swyx) Wang\n- [Speaker Page](https://2022.cascadiajs.com/speakers/shawn-swyx-wang)\n\n## Abstract\n\nIn the beginning, Jane and Joe Webdev were tempted by Satan to eat the forbidden UX fruit from the Tree of Three Tier Architecture, and God banished them from paradise forever. Here's how we fight back.\n\n## Notes\n![[talk.shawn-swyx-wang-paradigm-lost.*]]\n","n":0.13}}},{"i":88,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- talks online\n- 6 talks in 1\n\n- shifting paradigms\n\t- standard vs reality\n\n- what is full stack?\n\t- traditional (front/back, 3 tier, etc)\n\t- reductively simple\n- other stacks\n\t- lamp/mean/jam\n\t- 3tiers\n\t- osi layers\n- app holotypes\n\t- what are the sort of apps\n\n- examples of wow apps\n\t- arxiv-sanity example\n\t\t- additions to arxiv\n\t\t\t- keep track of recent papers\n\t\t\t- search \n\t\t\t- etc\n\t\t- turn website into app\n\t- some generalizations from arxiv-sanity\n\t\t- enrich data\n\t\t- validate existing data\n\t\t- personalize data\n\t\t- notify on new data\n\t\t- etc\n\t- book recommendation on hn\n\t\t- hackernewsreading\n\t- shazam\n\n- 4 paradigm shifts\n\t- local first\n\t\t- techs\n\t\t\t- pwa\n\t\t\t- wasm\n\t\t- move backend closer to user\n\t\t- embedded database\n\t\t\t- eg. \n\t\t\t\t- meteor minimongo\n\t\t\t\t- appsync\n\t\t\t\t- sqlite\n\t\t\t\t- duckdb\n\t\t- lots of advantages (see slide)\n\t- async\n\t\t- should be easy\n\t\t- why valuable\n\t\t\t- one click buy, counter 70% cart abandonement\n\t\t- lots of async tooling (eg. sideqik)\n\t\t- workflow orchestration (eg. temporal)\n\t- data\n\t\t- big data\n\t\t- data as moat\n\t\t- job posting growing **faster** than developers\n\t\t- ETL vs ELT\n\t- ai\n\t\t- eg. prompt engineering\n\t\t\t- theres a prompt marketplace!","n":0.08}}},{"i":89,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\nNo need to take notes, they are on his site.\n\n6 talks in 1 with the goal of changing lives and career paths and to aim higher.\n\n- standard\n- reality\n- local\n- async\n- ?\n- ai\n\n[Shawn's site](https://dx.tips/)\n(will be posting notes here)\n\n[An Industrial Strength Audio Search Algorithm.](https://www.researchgate.net/publication/220723446_An_Industrial_Strength_Audio_Search_Algorithm)\n\nJason Miller listed out a bunch of Application Holotype.  You can go from an app holotype and choose technologies based on what you want to do.\n\n\n\n- Edge first\n    - Deno\n    - Global everywhere\n    - Ryan Dahl is running with Remix\n- Meteor Minimongo\n- AWS AppSync DataStore\n- SQLite in the browser\n- Showing a tremendous amount of resources, need a link to this presentation to look back on.\n- async await has made async extremely simple to read and write.\n    - removes callback hell\n    - GH Actions fails a lot with scraping.\n- Orchestration with Temporal... it's a career\n- data engineer and data analyst are much more in-demand than FE/BE/FS devs\n    - data can improve dx\n- TIOBE indexes\n\n- [https://applyingml.com/papers]()\n- prompt engineering\n    - https://en.wikipedia.org/wiki/Prompt_engineering\n\n\n\n\n\n\n\n\n","n":0.079}}},{"i":90,"$":{"0":{"v":"A Few Good Design Patterns","n":0.447},"1":{"v":"\n> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/saimon-sharif)\n\n## Overview\n\n![Saimon Sharif image](https://create-4jr.begin.app/_static/2022/saimon-sharif.jpg){max-width: 300px}\n\n- name: Saimon Sharif\n- [Speaker Page](https://2022.cascadiajs.com/speakers/saimon-sharif)\n\n## Abstract\n\nThere’s quite a few design patterns – some of them even have fun names! But, which ones are actually relevant day to day? In this talk, we’ll review common patterns in JavaScript codebases, why they matter, and how to leverage them all while avoiding any mention of `AbstractPizzaBuilderFactory` and its friends.\n\n## Notes\n\n![[talk.saimon-sharif-a-few-good-design-patterns.md.*]]\n","n":0.118}}},{"i":91,"$":{"0":{"v":"Ross","n":1},"1":{"v":"\n## a few good design patterns\n\n**Saimon Sharif**\n\n- EM at Attune\n\n---\n\n- origins from Gang Of Four - Design Patterns book\n\n  - book contained 23 design patterns\n\n- community has different reactions to design patterns\n\n  - some seem very obvious\n  - may seem too complicated\n  - dynamic languages, eg JS, have different requirements/constraints than Java/etc\n\n- useful to turn implicit knowledge into explicit\n\n  - helpful to name concepts - provides a common language\n  - code reviews\n\n- hypothetical example - notepad startup pivoting to NFTs\n\n  - going to add 90% discount - add abiity to enable/disable without deploying\n  - solution: feature flag\n\n- feature flag lets us enable/disable things without deploying, enable fast rollbacks & gradual releases\n\n  - some vendors have admin panels to facilitate this\n  - rolling your own feature flag service is a can of worms, don't do it - bad past experiences\n\n- scenario: feature flag library creates a new websocket connection everytime feature is enabled\n\n  - solution: use Singleton, ensure only one connection is created\n  - singletons useful for accessing shared resources - files, database, cache\n\n- scenario: add observability to getPrice() function\n\n  - using performance API to measure execution time\n  - would need to change all code to wrap w/calls to performance API\n  - solution: use decorator pattern to annoitate functions to be instrumented\n  - decorators - still TC39 proposal, available in Typescript\n  - decorators are easy to add/remove\n\n- scenario: getFavorites() function does DB stuff, needs caching\n\n  - would like to add caching anywhere in a generic way\n  - solution: use Proxy pattern\n  - proxies allow us to control access to an object; we'll use to return cached value\n  - built-in to Javascript, though syntax is a bit hairy\n  - example of caching Math.random\n  - result is clean & simple w/separation of concerns\n\n- scenario: CEO wants to launch duplicate NFTs/object feature\n  - like JQuery or Knex - method chaining, use their own DSL\n  - solution: fluent interfaces\n  - our own version of method chaining\n\n---\n\n- two ways of learning\n  - just-in-time vs just-in-case\n  - neither better, good to know your bias\n  - try the opposite of your normal way of learning\n","n":0.054}}},{"i":92,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n- feature flag ","n":0.408}}},{"i":93,"$":{"0":{"v":"Hunt","n":1},"1":{"v":"\n\n- There were many design patterns and pattern languages before the Gang of Four was released.\n- Calls Hacker News the \"orange website\". \n- Works as an engineering manager at Attune\n- Design Patterns are *obviously* worthwhile.\n- How to enable and disable a discount without needing to redeploy?\n    - Feature flag: allow disabling and enabling things without deploying\n        - Fast rollback\n        - Gradual releases\n        - \"don't roll your own feature flag\"\n    - Singleton pattern to fix an issue with a websocket being made every time a feature flag is set (?)\n        - calls the singleton `static #<name> = null` <<using a variable name starting with a #>>.\n    - Trace function -> Heatmap\n    - Decorator pattern: wrap object and add new bheavior to those objects.\n        - easy to remove, since you can easily remove the line of code\n    - Proxy pattern\n        - controls access to an object\n        - returns a cached vaalue\n        - `Proxy` exists in JS\n        - `new Proxy(obj, handler)`;\n            - handler is an object with a function \"get\" used to trap the return value\n            - [mdn proxy docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n    - Fluent interface\n        -examples\n            - knex query building\n            - jquery\n            - rxjs\n        \n","n":0.073}}},{"i":94,"$":{"0":{"v":"courier-new","n":1},"1":{"v":"\n## Intro\n\n- Dynamic languages will benefit from different design patterns from static or compiled languages\n- Why care about design patterns? Knowing the name for a concept gives us a common language to discuss them with.\n\n## An opinionated list of good design patterns\n\n...Some of which come from the [Design Patterns](https://www.digitalocean.com/community/tutorials/gangs-of-four-gof-design-patterns) book by the Gang of Four.\n\n### Feature Flags\n\n- Not a “traditional” design pattern\n- Enable fast rollbacks and gradual releases\n\n### Singleton\n\n- Guarantee a given class only has one instance while making that instance globally available\n- Enable access to a shared resource (file, DB, web socket, etc.)\n\n### Decorator\n\n- Attach instrumentation (such as tracing) to another function\n- TS has first-class [decorators](https://www.typescriptlang.org/docs/handbook/decorators.html)\n- TC39 has [stage 3 proposal](https://github.com/tc39/proposal-decorators) for decorators\n- Multiple types: method decorator, class decorator\n\n### Proxy\n\n- Enables controlling access to an object\n- Built-in `Proxy` in JS: `new Proxy(obj, handler)` where handler intercepts and redefines what methods (such as `obj.get` should return)\n- [Mozilla docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n\n### Fluent Interface\n\n- An object-oriented API that relies on method chaining\n- Increase code legibility and composability with a domain-specific language\n\n## Ending thoughts\n\nConsider if you’re more of a just-in-time learner or a just-in-case learner, and give the other type a try sometime!\n","n":0.073}}},{"i":95,"$":{"0":{"v":"Learning and Managing Code with Code Notebooks","n":0.378},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/rebecca-peltz)\n\n## Overview\n\n![Rebecca Peltz image](https://create-4jr.begin.app/_static/2022/rebecca-peltz.jpg){max-width: 300px}\n- name: Rebecca Peltz\n- [Speaker Page](https://2022.cascadiajs.com/speakers/rebecca-peltz)\n\n## Abstract\n\nJupyter Notebooks have been around for almost a decade.  Data Scientists use these notebooks to track their experiments.  Software Developers, like scientists, can benefit from using a Code Notebook which combines markdown with code.\n\n## Notes\n\n![[talk.rebecca-peltz-learning-and-managing-code-with-code-notebooks.*]]\n\n","n":0.135}}},{"i":96,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"- Becky Peltz has been coding since 1982\n  - Curriculum Program Manager for Developer Education at Cloudinary\n- We see some examples of notebooks\n  - Renaissance Man Notebooks by Leonardo da Vinci.\n  - Physicist Notebooks by Isaac Newton.\n  - Geneticist Notebooks by Gregor Mendel.\n  - Artist Notebooks. Example: Jean-Michel Basquiat.\n- Can we digitize the notebooks?\n  - Literate Programming: In 1984, Donald Knuth came up with language called WEB\n  - http://www.literateprogramming.com/knuthweb.pdf\n- Data Scientists' Jupyter Notebooks\n- Becky talks about how we moved from Spaghetti code in 1970s to Low Code in 2020s.\n- We go through good and bad error handlers in JavaScript.","n":0.101}}},{"i":97,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- notebooks in vscode\n- speaker\n\t- been development in 1982\n\n- brief history of programming\n\t- literate programming\n\t- sphagethi code\n\t- sphagethi code to low code and no code\n- computer language go from variable to constant (eg. pi calcutation)\n- vscode notebooks\n- webhooks","n":0.156}}},{"i":98,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Code Notebooks, not just Jupyter notebooks\n- Becky Peltz\n- Curriculum Program Manager at Cloudinary\n- Codex Atlanticus\n- Lots of famous old notebooks\n- Personal notebooks are hard to review and share.\n\n- Literate Programming by Donald Knuth (1984)\n    - For Knuth, code is literature\n    - [pdf](http://www.literateprogramming.com/knuthweb.pdf)\n\n- big shift in the understandability of code with the \"no more goto\" movement.\n- xhr, ajax\n- [event handling in JS the good bad and ugly](https://bmshamsnahid.medium.com/node-js-error-handling-the-good-the-bad-the-ugly-7dbc8bcee683)\n- Code notebooks use markdown]\n- Good for presenting material\n\n- [vscode notebook api](https://code.visualstudio.com/api/extension-guides/notebook)\n- for dendron: can you convert markdown into a code notebook?\n\n","n":0.107}}},{"i":99,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n## Notes by [aminamos](https://github.com/aminamos)\n- starting with a history of notebooks, physics/chemistry/art\n- can we digitize these notebooks? using digital world for future notetaking\n- Donald Knuth - web, tangle, weave\n    - http://www.literateprogramming.com/knuthweb.pdf \n    - humans think like trees, we have interconnected thoughts\n    - code used tangle and weave to connect different parts\n- GOTO, difficult to read spaghetti code\n- data science jupyter notebooks\n- the transition from spaghetti code to low code (not low code like draggable/UI coding, but more highly abstracted code via serverless functions) opens software up to more documentation in notebooks\n- example: https://github.com/rebeccapeltz/cascadiajs-notebooks\n- keeping notes in context with code allows it to be referenced by yourself, and also others\n","n":0.096}}},{"i":100,"$":{"0":{"v":"The 90s Called and They Want Their Websites Back","n":0.333},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/rachel-white)\n\n## Overview\n\n![Rachel White image](https://create-4jr.begin.app/_static/2022/rachel-white.jpg){max-width: 300px}\n- name: Rachel White\n- [Speaker Page](https://2022.cascadiajs.com/speakers/rachel-white)\n\n## Abstract\n\nNo server configuration? No problem! With serverless & JAMStack becoming more and more popular, it’s like static sites never went out of fashion. Though, unlike the 90s, we don’t have to sacrifice style for performance. Let’s recreate a Japanese style photo booth with React & WebAssembly!\n\n## Notes\n\n![[talk.rachel-white-the-90s-called-and-they-want-their-websites-back.*]]","n":0.122}}},{"i":101,"$":{"0":{"v":"Kevinlin","n":1},"1":{"v":"\n## Notes\n\n- speaker\n\t- tech evangelist @ datadog\n\t- did robokitty \n\n- history\n\t- geocities\n\t- angelfire\n\t\t- started off as medical transcription, pivoted into personal websites\n\t\t- eg\n\t\t\t- personal diary \n\t\t\t- cute boy sites\n\t\t\t- tutorial on doom video\n\t\t\t- jerry the cat page\n\t- 2000s\n\t\t- tracking with javascript\n\t\t- neopets\n\t\t- *greyblogger*(?), inspiration for word press\n\t\t- wordpress/joomlal/drupal\n\t\t- js frameworks\n\t\t\t- ember, express, react, angular, backbone, etc\n\t\t- html boilerplate\n\t\t- sass and less\n\t\t- css + design, etc\n- jamstack\n\t- decouple frontend from backend\n\t- [j]avascript\n\t- [a]pis\n\t- [m]arkup\n- static site generateors\n\t- next, hugo, gatsby, etc\n- demo, make a jamstack\n\t- use create-act-app-rewired\n\t- use photon \n\t- use fabric.js\n- deploying, netlify","n":0.104}}},{"i":102,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Evolution of the personal website\n- Works at Datadog\n\n# History of the Personal Site\n\n- Geocities\n- Angelfire\n    - Self expression, having fun online\n- 2000s brought about messier websites\n- Neopets\n- Graymatter -> WordPress\n- CMS Systems\n- JS Frameworks\n- CSS + Design\n    - So many different frameworks\n- Purikura photobooth website.\n    - Made purrybooth\n        - Windows 97 lookin' user interface, really inspiring.\n\n\n\n\n","n":0.132}}},{"i":103,"$":{"0":{"v":"Bringing Web3 to the Web","n":0.447},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/mikeal-rogers)\n\n## Overview\n\n![Mikeal Rogers image](https://create-4jr.begin.app/_static/2022/mikeal-rogers.jpg){max-width: 300px}\n- name: Mikeal Rogers\n- [Speaker Page](https://2022.cascadiajs.com/speakers/mikeal-rogers)\n\n## Abstract\n\nAn overview of Web3 technologies that have recently become easily accessible to all web developers.\n\n## Notes\n\n![[talk.mikeal-rogers-bringing-web3-to-the-web.*]]","n":0.167}}},{"i":104,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"\n- Speaker Notes can be viewed at https://tiny.cc/web3-cascadiajs\n- NFT Storage\n- Platform is called Web3.Storage\n- The Web is made of interlinked protocols.\n  - wrt transport: HTTP, RSS, Atom, WebDAV etc\n  - wrt view: HTML, CSS, Media Containers (jpeg, gif, mp4, etc)\n- Location Addressing\n  - URI FTW!\n  - When we link this way, we're linking to a single specific location (centralization)\n- Decentralization\n  - Figure out how to port individual pieces.\n- Data Addressing: CIDs (IPFS addresses):\n  - hash based identifiers for data\n  - can link to any future or existing hash addressed data in ANY LOCATION and make available under ANY transport.\n- Actor Addressing: DIDs (Decentralized Identifiers):\n  - a w3c standard\n  - for addressing any \"subject\"\n  - identify actors by public keys\n- Decentralized OAuth: UCAN https://ucan.xyz/\n- UCAN permissions:\n  - Any right that can be expressed in Data can be dranted to any Actor.\n  - Any right described in Data that is addressed by hash can be delivered by any Actor.\n  - Any description of any right can be sent to any addressable location.\n- UCAN permission grant:\n  - Any actor can delegate these rights to other Actors.\n  - Any user can delegate to other users.\n  - Any service can delgate rights to users.\n  - Any service can delgate rights to other services.\n- UCAN execution\n  - Any addressable right can be invoked by any capable actor.\n  - Any invocation can be sent to any addressable location by any actor.\n  - Any invocation can be delegated to any actor to fulfill any aspect of an invocation.","n":0.063}}},{"i":105,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- how to store nfts on the blocktrain in a decentralized way\n\t- use ipfs\n- ...\n- ucan protocol\n\n- delegation is builtin\n- invocation\n\t- any addressable right can be invoked by anyone\n\n","n":0.177}}},{"i":106,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- NFT Storage conversation\n- Web3.Storage\n- At scale cloud native IPFS(?) host\n- Tim Burner\n- CID (IPFS Addresses)\n    - HASH that tells you what type of hash it is\n- DID standard: Decentralized Identifiers.  Very good at describing anything that you could wap a public key for.\n- UCAN: decentralized oauth : https://ucan.xyz\n    - Describe the capability you want in data\n    - Any write to the data can be expressed with UCAN\n        - Not Bearer Token\n    - Simply proof chains\n","n":0.115}}},{"i":107,"$":{"0":{"v":"Rethinking Web UX with Webauthn and Project Fugu","n":0.354},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/joyce-park)\n\n## Overview\n\n![Joyce Park image](https://create-4jr.begin.app/_static/2022/joyce-park.jpg){max-width: 300px}\n- name: Joyce Park\n- [Speaker Page](https://2022.cascadiajs.com/speakers/joyce-park)\n\n## Abstract\n\nDevs still may not realize that browsers are now on the cusp of enabling far more advanced capabilities via efforts like Webauthn and Project Fugu. This will allow developers to more effectively mix the business case for no-download PWAs and web with the native capabilities of current hardware. We’ll go through demos and sample code for some fun new types of web interactions, including biometric authentication, voice recognition, Bluetooth device integration, and ML-recognized gestures.\n\n## Links\n- [Twitter link to counting app](https://twitter.com/ValaAfshar/status/1562468468683079680)\n\n## Notes\n\n![[talk.joyce-park-rethinking-web-ux-with-webauthn-and-project-fugu.*]]\n\n","n":0.1}}},{"i":108,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n- two types of builders: plumbers (make tools and infrastructure) and carpenters (make user-facing apps)\n- building an app to help people connect faster IRL (can't demo yet)\n- \"there are a lot of things the web can do now that can revolutionize our UX\"\n- Project Fugu\n    - Google-led attempt to match native UX on web\n    - https://developer.chrome.com/blog/fugu-showcase/\n- Demos\n- https://graphauth.io/registerWebauthn\n- https://twitter.com/devdevcharlie/status/1564281622970568704?s=20&t=T9K7v0bXk4MDa4aTViEfFA\n- ML driven UX\n    - https://teachablemachine.withgoogle.com/\n- caveats\n    - Safari\n    - performance can be an issue\n    - PWAs are misunderstood by the masses (user education)\n- takeaway: understand new things browsers can do for us, make things cooler\n","n":0.102}}},{"i":109,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Who am I and what right do I have to talk about *this*.\n  - Plumbers are over represented making infrastructure and tools.  Carpenters make user-facing apps.\n  - Built an app to allow people to connect faster.\n- New ventures start during a recession because people have free time when they get laid off.  \n- Excited about https://remix.run/ because it will \"fix performance problems in react\".\n- Native app downloads are declining.\n- Project FUGU\n  - https://www.chromium.org/teams/web-capabilities-fugu/\n  - ^ undelightful documentation.\n- https://developer.chrome.com/blog/fugu-showcase/\n- Webauthn (FIDO2)\n  - In the browser FIDO22.  Completely get rid of passwords.\n    - Biometrics or special key...\n    - File access API [https://web.dev/ps-on-the-web]()\n  - ML-driven UX\n\n","n":0.098}}},{"i":110,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n### Notes by [aminamos](https://github.com/aminamos)\n  > all slides were left behind, ahd to re-create slides\n\n- speaker bio\n  - plumbers: toosl and infrastructure\n  - carpenters: user facing apps\n  - speaker is a carpenter\n  - currently building an app to help people connect faster IRL \n\n- context\n  - for past few years, been possible to stroe lots of info on web apps\n  - this is paradigm changing, like XHR\n\n- ux is boring now\n- toolkits are good\n- app downloads and usage are down\n\n- what is fugue\n  - google led attempt to match native ux\n  - apple has not played along, not much progress\n\n- webauthn (this is fido2)\n  - replace passwords with biometrics\n\n- demo\n  - web usb\n  - file system access api\n\n- ml driven ux\n  - image classification eg\n    - banana demo\n  - voice recognition\n\n- caveats\n  - safari\n  - perf\n  - pwas are misunderstood\n","n":0.085}}},{"i":111,"$":{"0":{"v":"Reverse Engineering a Private API","n":0.447},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/joyce-lin)\n\n## Overview\n\n![Joyce Lin image](https://create-4jr.begin.app/_static/2022/joyce-lin.jpg){max-width: 300px}\n- name: Joyce Lin\n- [Speaker Page](https://2022.cascadiajs.com/speakers/joyce-lin)\n\n## Abstract\n\nLearn how to inspect APIs for when you're working with poorly documented ones, debugging, web scraping, or penetration testing.\n\n## Notes\n\n\n\n![[talk.joyce-lin-reverse-engineering-a-private-api.kevinslin.*]]\n\n","n":0.158}}},{"i":112,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- reverse engineering apis\n- eg:\n  - ordering extra bacon\n\t- custom frontends (for couchsurfing)\n- disclaimer: be ethical when reverse engineering\n- demo: tik tok api\n\t- view api request\n\t- see session details (HAR file, import into postman)\n\t- capture stream \n\t- replay\n\t- scrape dynamic websites\n\t\t- header as googlebot\n- hyrum law: anything that is an api will be consumed","n":0.132}}},{"i":113,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Head of developer relation's at POSTMAN @petnuiaGray\n- Reverse Engineering === Hacking\n- Reverse Engineering Games subreddit /REGames\n- tinder API has been hacked in the past\n- \"not the crowd\" for nature?  👎\n    - or was it just because she cheated the reservation system?\n- See coder's rights document.\n    - Do not publish\n- Copy network command as curl and import it into POSTMAN.\n- HAR file: HTTP Archive format: capture all network traffic\n    - tldr, probs instructions: https://www.ghacks.net/2020/12/29/how-to-create-and-view-har-files-for-website-troubleshooting/ \n- Postman has an interceptor functionality... like Wireshark??\n- Fake being the googlebot as the user-agent to get dynamic content.  User-Agent cookie Googlebot/2.1\n\n- Alissa Knight quote on hacking...\n- Hyrum's Law\n\nKate Gather, extra bacon at papa jon's gets a bobblehead.\n\n## Presentation\n\nThe presentation is kind of cool because she has an overlay over her website..\n","n":0.089}}},{"i":114,"$":{"0":{"v":"Reverse Engineering a Private API","n":0.447},"1":{"v":"\nHead of Developer Relations, Postman\n\n### Capturing network traffic\n\nHTTP files\n\n- chrome dev tools\n- Right click on network call to copy as curl\n- Paste into postman as raw text\n- Can then replay and call in postman\n\nSession capture\n\n- har files right click and save all as har\n- in postman inspect a the HAR file\n    - har is used for ession replay\n\nCapture stream of HTTP API Requests\n\n- use web proxy to capture a stream of HTTP\n- Postman has a free proxy tool\n    - alternatives fiddler, etc.\n    - Postman interceptor chrome extension\n        - can apply filters by subdomain\n        - see ajax calls\n    - in postman desktop create a new collection to capture proxy calls from chrom extension\n    \n    Proxy through postman, and save as a collection\n    \n    - capture requests\n    - will show connection\n    - filter and will proxy all calls live into postmn\n    - Stop session, will give analytics afterwords\n\nProxy mobile app\n\n- see slide\n\n### Replay API Calls\n\nOnce you intercept sending reques again after a duration doesn’t work (auth expires)\n\n- Cookie Auth\n    - Cookie tab in github\n    - manually add cookies to sync w chrome browser → will log you in\n    - set cookie in header is the one you use in all your cookies going forward\n- can get curl request out of postman so you know how to format the api call so it works\n\n**Spoofing client attributes**\n\n- User agent header\n- User-Agent -> Googlebot/2.1\n    - Everyone wants to be scraped by google\n    - USE THIS AS YOUR USER AGENT\n- Replay in code → roll into bot\n    - Use code snippet from postman\n    \n\nAlissa Knight → hacker\n\n**Hyrums Law**\n\n\"With a sufficient number of users of an API, it does not matter what you promise in the contract: all observable behaviors of your system will be depended on by somebody.\"\n","n":0.059}}},{"i":115,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n## Notes by [aminamos](https://github.com/aminamos)\n- https://www.toptal.com/back-end/reverse-engineering-the-private-api-hacking-your-couch\n- https://blog.tendigi.com/starbucks-should-really-make-their-apis-public-6b64a1c2e923\n- keep in mind\n    - review the terms of service before starting this\n    - find a path for \"responsible disclosure\"\n    - be ethical\n- three common items to analyze\n    - individual API request\n    - session details\n    - stream of HTTP requests\n- can use dev tools to copy as curl --> bring into Postman (or API tool) as raw text\n- can also look into session details, via HAR files\n- the exported HAR can be imported into [Postman](https://www.postman.com/postman/workspace/postman-answers/documentation/9215231-dd262075-9008-429c-8039-c8c67ee9bf67) (P.S. also https://toolbox.googleapps.com/apps/har_analyzer/)\n- Postman can also be used as a proxy that captures HTTP requests https://learning.postman.com/docs/sending-requests/capturing-request-data/interceptor/\n    - also works on mobile https://blog.postman.com/using-postman-proxy-to-capture-and-inspect-api-calls-from-ios-or-android-devices/\n- replay API calls, can be difficult to run one call long term due to expiring info\n- if scraping dynamic websites, a lot of the info won't immediately be there\n- Googlebot user-agent can help view HTML","n":0.085}}},{"i":116,"$":{"0":{"v":"The Startup's Guide to Creating a Design System","n":0.354},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/isabela-moreira)\n\n## Overview\n\n![Isabela Moreira image](https://create-4jr.begin.app/_static/2022/isabela-moreira.jpg){max-width: 300px}\n- name: Isabela Moreira\n- [Speaker Page](https://2022.cascadiajs.com/speakers/isabela-moreira)\n\n## Abstract\n\nA solid design system is one of the most important things to make sure your product and brand is consistent and relays the same message to users across the board. In this talk, we’ll cover how to create a design system that nails how you want to convey your brand - from colors to typography to tone.\n\n## Notes","n":0.113}}},{"i":117,"$":{"0":{"v":"Zero-dependency CLIs with Node.js","n":0.5},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/ian-sutherland)\n\n## Overview\n\n![Ian Sutherland image](https://create-4jr.begin.app/_static/2022/ian-sutherland.jpg){max-width: 300px}\n- name: Ian Sutherland\n- [Speaker Page](https://2022.cascadiajs.com/speakers/ian-sutherland)\n\n## Abstract\n\nNode.js is a popular choice for building dev tools and some recently added features make it possible to build powerful tools without any external dependencies. We’ll look at these new features and show how to use them to build a custom CLI app with zero external dependencies.\n\n## Notes\n\n![[talk.ian-sutherland-zero-dependency-clis-with-node-js.*]]\n\n","n":0.121}}},{"i":118,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- cli apps\n\t- stuff that runs on the terminal\n- features\n\t- options (eg. `ls`)\n\t- subcommands (eg. `git`)\n- why node\n\t- scripting language\n\t- good at json, parallel task, network request, etc\n\t- lots of packages\n- dependencies\n\t- other code (eg. library)\n\t- node does not have big standard lib\n- are deps bad?\n\t- depends\n\t- does introduce overhead\n\t- you can bundle to make it better\n- new syntax\n\t- using `import` (es module)\n\t- import nodejs internals with `node:` prefix\n\t\t```js\n\t\timport fs from \"node:fs\"\n\t\t```\n\t- every npm name is taken, we couldn't add anything new, hence new namepsace\n- argument parsing\n\t- old way:\n\t\t```js\n\t\t// get everything from STDIN, split by whitespace\n\t\t// eg. [node, mycli, --ls]\n\t\tconst args = process.argv\n\t\t```\n- argument parsing\n\t```js\n\timport {parseArgs} from \"node:util\"\n\tconst input = process.argv.slice(2)\n\tconst options = {\n\t\tsilent: {\n\t\t\ttype: 'boolean',\n\t\t\tshort: 's'\n\t\t}\n\t}\n\tconst {values} = parseArgs({input, options}):\n\t```\n- fetch\n\t- make http request\n\t- its available in **node 18**\n\t- built on top of undici (http/1.1 client)\n\t- has web streams api\n\t```js\n\t// available globally\n\tconst response = await fetch(\"...\")\n\tconst body = await response.json()\n\t// you get JSON\n\t{\n\t\t...\n\t}\n\t```\n\n- demo to add new git subcommand the old way\n\t```js\n\t// very long example\n\t// ...\n\t```\n\n- demo with new way\n\t```js\n\t// very short example (less than 10 lines)\n\t// ...\n\t```\n\n- test runner\n\t- basic api to do this\n\t- eg. mocha but builtin to node\n\t```js\n\timport test from \"...\"\n\ttest(\"synchornous test\", (t) => {\n\t\t//...\n\t})\n\t// also works async\n\t```\n\n- recursive file system ops\n\t```js\n\timport {rm} from \"node:fs/promises\"\n\n\t// experimental \n\timport {cp} from \"node:fs/promises\"\n\n\t// doesn't exist yet, open pr\n\timport {readdir} from \"node:fs/promises\"\n\t```\n\n- whats next\n\t> DISCLAIMER: complete speculation\n\n\t- glob?\n\t- self contained executable\n\t- typescript (lol - i wish)","n":0.065}}},{"i":119,"$":{"0":{"v":"Hunt","n":1},"1":{"v":"\n- Neo Financial, Head of DEX and OSS\n- twitter @iansu\n- flags\n    - `-l1` or `-l -1` Short options\n    - `--color` Long options\n- subcommands\n    - the `status` in `git status`\n- \"CLI is serious 80s vibes\"\n- Node has a small core which is why there are lots of dependencies installed with `npm` for a given project like `isNumber`.\n- Bundling isn't the best because it can still result in a large bundle size.\n- `type: module` to package.json to use `import` and ESMM or us `.mjs` (as opposed to `.cjs`).\n- import Node.js internals with `node:`\n    - eg, `import fs from 'node:fs'`\n- There are many different ways to set arguments in a cli\n- parseArgs: `process.argv` -> Tedious so use `yargs` of `commander`.\n    - NOT TEDIOUS ANYMORE!  `parseArgs from 'node:util'` uses `process.argsv`\n        - declare the options (kind of like commander)\n    - has polyfill, will be \"backboarded\" to v16\n- fetch: now available in node@18\n    - Built on top of Undici (HTTP/1.1)\n- see `iansu/git-blast` on github to run git blast and see people's twitter handle's if supplied on githu\n- node@18 now has a basic test runner.\n    - don't necessarily need jest anymore.\n    - `node --test`\n- recursive mkdir function with `{recursive: true}`\n- recursive rm operation `{recursive: true, force: true}`\n- recursive cp (same as mkdir) **experimental\n- readdir **open pr, not merged\n- Speculation of what's next\n    - glob patterns\n    - self contained executables\n    - native typescript (aka deno)\n\n[build the future](https://github.com/nodejs/tooling)\n","n":0.066}}},{"i":120,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n## Notes by [aminamos](https://github.com/aminamos)\n- topics\n    - what is a cli\n    - what are dependencies, why avoid them\n    - what helps us write cli apps\n    - new upcoming nodejs features \n- CLIs use flags/options\n- why build with node?\n    - usually a language your team is already familiar with\n    - JSON data operations, network requests are pretty well supported\n    - node has a package ecosystem (useful when needed, still avoid when possible)\n- dependencies\n    - code that your program needs to run\n    - all users of your app will need to install dependencies\n    - smaller apps, like  CLIs, not having an install or build step makes setup, contributing, and distribution easier\n- new node syntax\n    - import instead of require\n    - ESM instead of CJS\n- argument parsing\n    - this process is surprisingly complicated\n    - https://nodejs.org/docs/latest/api/process.html#processargv\n    - third party library like yargs or commander, in the past\n    - parseArgs is ~the future~ as of node 18.3 (potentially backported to node 16)\n        - polyfill proposal for util.parseArgs() - https://www.npmjs.com/package/@pkgjs/parseargs\n        - doesn't support all previous functionality, but useful error messages\n        - https://nodejs.org/api/util.html#utilparseargsconfig\n- fetch\n    - before fetch, had to do a lot of pre-work to setup, run, and handle http requests\n    - with fetch you can just `await fetch()` and return the body/errors\n    - `git blast` is real https://github.com/iansu/git-blast\n- test runner\n    - https://nodejs.org/api/test.html#test-runner\n- recursive file system operations\n    - https://nodejs.org/api/fs.html#fspromisesmkdirpath-options\n    - https://nodejs.org/api/fs.html#fspromisesrmpath-options\n    - recursive copy\n- wild speculation\n    - self contained executibles\n    - glob\n    - typescript `node index.ts`\n- what's next, ways to contribute\n    - join node tooling group https://github.com/nodejs/tooling\n","n":0.063}}},{"i":121,"$":{"0":{"v":"Cryptography Isn't Scary","n":0.577},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/eddie-zaneski)\n\n## Overview\n\n![Eddie Zaneski image](https://create-4jr.begin.app/_static/2022/eddie-zaneski.jpg){max-width: 300px}\n- name: Eddie Zaneski\n- [Speaker Page](https://2022.cascadiajs.com/speakers/eddie-zaneski)\n\n## Abstract\n\nCryptography isn't scary, it's fun! Join for a crash course in modern cryptography. Learn what's available in Node and the browser along with how we are securing the software supply chain.\n\n## Notes\n\n![[talk.eddie-zaneski-cryptography-isn't-scary.*]]\n","n":0.139}}},{"i":122,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- disclaimer: don't try this at home\n\n- symmetric keys: everyone has key\n- asymmetric key (public key cryptography): only share public key\n- one way functions: hard to reverse operation\n- pseudorandom number generators: sources of entrophy\n- rsa\n\t- great when it came out, not recommended anymore\n- modular arithmetic\n\t- % operator in javascript\n- elliptic curve cryptography (ecc)\n- why ecc\n\t- rsa needed to increase bit length to make stronger\n\t- ecc scales better\n- diffie hellman key exchange\n\t- agree over symmetric key in insecure channel\n\t- eg. ssh \n- web crypto api\n\t- built into browser\n- nsa backdoor\n\t- pseudo random number generator that is broken by design\n\t- believed that nsa has backdoor\n- sigstore\n\t- new standard for signing, verifying, and protecting software\n\t- lets encrypt for signing\n","n":0.092}}},{"i":123,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- works at chainguard using kuberneties\n\n- don't roll your own cryptography\n- RSA isn't the bees knees anymore\n\n- Modular Arithmetic\n    - \"one way door\"\n- Eliptic Curve Cryptography\n    - also one way door.  AFAIK it's the backbone of blockchain\n    - `y^2 = x^2 + ax + b`\n    - used in the generation of a public and a private key\n- Diffie Hellman Key Exchange\n- `import crypto from 'node:crypto`\n    - Sample Diffie Hellman Key Exchange code sample...\n- `getRandomValues(TypedArray)`, `randomUUID()`, `subltle`\n    - Why subtle?  Easy to shoot yourself in the foot.\n- NSA's cryptography function scandal `Dual_EC_DRBG`.\n    - require usage of P and Q\n    - NSA knows `e`?\n- https://sigstore.dev\n    - OSS\n    - Let's Encrypt for signing\n    - Fulcio: keyless signing\n    - Rekor: transparency log\n    - Cosign: Container signing\n    - A tool for signing and verifying npm packages\n- npm RFC 626: linking packages to source and build\n    - proof of where package was built\n\n## Presentation Notes\n\n- full of nice gif memes.\n\n[slides](https://bit.ly/3pZwLzG)\n\nRecommends the [computerphile youtube channel](https://www.youtube.com/user/Computerphile).","n":0.08}}},{"i":124,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n## Notes by [aminamos](https://github.com/aminamos)\n- symmetric, asymmetric, one-way functions, pseudorandom number generators\n- RSA\n    - time to phase this out\n    - prime factorization\n- modular arithmetic is a one-way function\n- ECC elliptic curve cryptogrpahy\n    - allows shorter key lengths but more security\n- DHKE\n- web crypto API https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API\n- SubtleCrypto https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API\n- Dual_EC_DRBG https://en.wikipedia.org/wiki/Dual_EC_DRBG\n    - https://www.youtube.com/watch?v=nybVFJVXbww\n- Sigstore - Let's Encrypt for signing","n":0.134}}},{"i":125,"$":{"0":{"v":"Creating a WebXR Tic-Tac-Toe game with Voice Chat on the Code of Giants","n":0.277},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/dwane-hemmings)\n\n## Overview\n\n![Dwane Hemmings image](https://create-4jr.begin.app/_static/2022/dwane-hemmings.jpg){max-width: 300px}\n- name: Dwane Hemmings\n- [Speaker Page](https://2022.cascadiajs.com/speakers/dwane-hemmings)\n\n## Abstract\n\nA journey through taking a seemingly impossible idea to an actual project by combining technologies and tools created by others.\n\n## Notes\n\n![[talk.dwane-hemmings-creating-a-webxr-tic-tac-toe-game-with-voice-chat-on-the-code-of-giants.*]]","n":0.156}}},{"i":126,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"\n- Dwane created a project to do real-time transcription.\n- Dwane will use Attack on Titans reference during the talk.\n- https://TicReactToe.com which creates a video chat for players playing the game.\n- https://modelviewer.dev/ is used for viewing 3D models.\n- We check https://xoxr.games/ which shows AR mode.\n- Creating WebXR environments\n  - https://aframe.io\n  - https://babylonjs.com\n  - https://threejs.org\n- Plan: Bord X|O models, model-viewer, WebXR. \n- Where to get 3D models?\n  - https://clara.io\n  - https://sketchfeb.com\n  - https://turbosquid.com\n  - https://polyhaven.com\n- Creating models\n  - https://blender.org\n  - https://sketchup.com\n  - https://tindercad.com\n  - https://unity.com\n  - Microsoft Paint 3D\n- Playing the Game\n  - https://modelviewer.com/editor\n- Communication\n  - https://developer.vonage.com/client-sdk","n":0.103}}},{"i":127,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n\n- tiktok is the platform to be in\n- personal story\n\t- personal investment story\n\t- everyweek, talk about what i spent my money on \n- twitter vs tiktok\n\t- twitter has long threads\n\t\t- very one sided\n\t- new users are video native\n\t\t- youtube shorts\n\t\t- tiktok\n- instagram vs tiktok\n\t- instagram reels is like tiktok\n\t- instagram does not have the culture (eg. its corn)\n\t- tiktok has more vulnerability\n- reddit vs tiktok\n\t- subreddits is interesting\n\t- its easier to create hate content on reddit \n\t- tiktok, you show your face, disincentivizes hate\n\t- subreddit take over community, eg. `r/trees`\n- tiktok vs shortform video\n\t- youtube shorts more formal vs authentic\n\t- will spend 5min btw meetings to do tiktok video\n- whats in it for me\n\t- find your superfollowers\n\t- spheres of interest (we like more than one thing)\n\t- next generation (mentorship)\n\t- promote diversity\n- why tiktok for companies\n\t- top of funnel\n\t\t- new age search (look for places to eat)\n\t\t- wrod of mouth\n\t\t- casual brand\n- recommendations\n\t- joyce from [[talk.joyce-lin-reverse-engineering-a-private-api]]\n\t- pheung (techtalk.com)\n\t- shmany (?)\n\t- alex friedman (?)\n- follow\n\t- tikitok: @seattletechbro\n\t- twitter: @aarohmankad","n":0.077}}},{"i":128,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- [qr code link](https://audience.myslides.page/?id=202209901-cascadiajs)\n- determined not stubborn\n- Macgyver\n- \"difficult takes a day, impossible takes a week\" - Jay Z\n- ()[https://ticreacttoe.com]\n- Works at Vonage\n- [vonage blog](https://dwane.in/vonage)\n- \"Web Components\"\n- [model viewer](https://modelviewer.dev)\n    - video tag but 3d\n\n- hosting prototypes\n    - codepen.io\n    - glitch.com\n    - codesandbox.io\n    - stackblitz.com\n    - aframe.io\n- getting assets\n    - clara.io\n    - sketchfab..com\n    - turbosquid.com\n    - polyhaven.com\n- creating models\n    - blender.com\n    - microsoft paint 3d\n    - unity\n- You can use vonage to handle events\n- Reads off some items from the codescape bingo card\n- Pulls out a snap drone\n- I've never been pu\n","n":0.105}}},{"i":129,"$":{"0":{"v":"How We Automated our Relationship","n":0.447},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/daphne-liu)\n\n## Overview\n\n![Daphne Liu image](https://create-4jr.begin.app/_static/2022/daphne-liu.jpg){max-width: 300px}\n- name: Daphne Liu\n- [Speaker Page](https://2022.cascadiajs.com/speakers/daphne-liu)\n\n---\n\n![Tiger Oakes image](https://create-4jr.begin.app/_static/2022/tiger-oakes.jpg){max-width: 300px}\n- name: Tiger Oakes\n- [Speaker Page](https://2022.cascadiajs.com/speakers/tiger-oakes)\n\n## Abstract\n\nWant to automate your home? Come learn how to sharpen your skills in Node, APIs, and the Internet of Things while making laundry, cooking, & calendar projects that improve your life and relationship.\n\n## Notes\n\n![[talk.daphne-liu-how-we-automated-our-relationship.*]]","n":0.127}}},{"i":130,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"\n- Tiger Oakes x Daphne Liu\n  - Tiger works with Microsoft Loop.\n  - Daphne works on Lyft Web App & design systems.\n- Communication, Transparency, and Teamwork.\n- Software solutions for not doing the chores.\n- Talk can be used for Couples, Family, Roommates or yourself.\n- Use Node.js, APIs and IoT for:\n  - recipes\n  - meetings\n  - laundry\n- Source code is available on GitHub https://discord.com/channels/853074440069578772/1014010511278473317/1014958419024822362\n- Recipes\n  - You're hungry, trying to cook or got groceries\n  - Create a recipe box on Notion, using a template\n  - Create a feeding schedule\n  - Automatically pull recipe from notion, and randomly assign lists on Trello.\n  - Notion comes with API, UI and templates\n  - Trello comes with API, UI, drag and drop features, and works offline.\n  - Talk does into details of how Notion and Trello APIs can be worked on.\n    - Notion https://developers.notion.com/\n    - Trello https://developer.atlassian.com/cloud/trello/\n- Meetings\n  - Share home office, and it's difficult when both partners have meetings.\n  - Use Home Assitant API https://www.home-assistant.io/ with Event emitters, and smart plug.\n  - Talks about how valendar event flow works, which includes filtering happens and timers are set.\n  - Use Node-RED https://nodered.org for the easy drag and drop UI.\n- Laundry\n  - Set up vibration motion sensor (Aquara Vibration Sensor) to check if washing is done, and remind on Google Home or send a tweet.\n- Relationships can't be automated. The key is spending time together, and having open communication.","n":0.066}}},{"i":131,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- how we stayed together for 6 years\n\t- communication\n\t- transparency\n\t- teamwork\n- we automated all these things\n\n- recipes\n\t- using notion & trello\n\t- copy/paste recipes into notion\n\t- script to add shopping list + notion recipe list\n- walkthrough of js code\n- export to trello\n\n- meetings\n\t- smart lights that turn on when on a meeting\n\t- connect to smart plug to toggle automatically \n\t- use home assisstant api + google calendar api\n\t- use nodejs event emitter functionality\n\t- use nodered to make home automation easier\n\n- laundry\n\t- vibration sensor on laundry\n\t- when vibration stop, send signal to google home to make announcement that washer is done\n\t- use nodered\n\t- vibration sensor on amazon\n\t- zigbee hub\n\n- automation project took communication/transparency/teamwork","n":0.094}}},{"i":132,"$":{"0":{"v":"Hunt","n":1},"1":{"v":"\nDaphne & Tiger.\n\n- Communication\n- Transparency\n- Teamwork\n\n- Who does chores?\n- https://github.com/NotWoods/automate-our-relationship \n\n- Recipes in Notion\n- Feeding Schedule, assigning to a chart\n- repeated tast -> automation\n- Trello for flow\n- Code is on github that generates the eating board and making the grocery list.\n\nAutomating meetings with a light that integrates with a person's calendar\n    - home-assistant.io\n    - nodered.io\n\n- Zigbee hub is the best hub for using IOT because it can connect to many IOT devices\n- Home automation is a good date idea\n","n":0.113}}},{"i":133,"$":{"0":{"v":"The Web is Good Now","n":0.447},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/chris-coyier)\n\n## Overview\n\n![Chris Coyier image](https://create-4jr.begin.app/_static/2022/chris-coyier.jpg){max-width: 300px}\n- name: Chris Coyier\n- [Speaker Page](https://2022.cascadiajs.com/speakers/chris-coyier)\n\n## Abstract\n\nThere are quite a few things in the world of web design and development that have gotten… easy. It might be time to take a look at how you’re approaching some of the building blocks of your website because evolutions in browser technology and tooling have made many things easier and better. We’ll have a look at browser-level things like things as fundamental as layout, typography, and animation. Then also tooling level things like media handling, serverless concepts, and hosting.\n\n## Notes\n\n\n### Hunter's notes\n\n\n- Chris Coyier\n  - Has published 5k blog posts.\n  - Runs the shop talk podcast?\n- Ate every breakfast burrito in Bend.\n- took pictures, entered data...\n- Used Astro to build his website.\n- \"CSS Scripture\"\n\t- Grid layout is great for sorting cards.\n\t\t- As many as fit ===repeaaat(auto-fit, minmax(min(100%,360px), fr));\n\t\t- grid-template-columns: masonry\n\t- Container queries are a new thing on the way\n\t\t- can style a component against its own container.\n\t\t- uses wrapper divs\n\t\t- `@container <name <size> { // style }`\n\t- WAAPI Web Animation API\n\t\t- `element.animate(ary, opts)`\n\t\t- Maybe you don't need an animation framework anymore\n\t- Scroll timelines is a thing that might be coming soon... define scroll events with keyframes.\n\t- `offset-path` and `offsite-distance` to animate with apath.\n\t\t- This one, comes in on a curve.  *laugh*\n\t- FLIP.... too fast to take notes\n\t\t- Can chsange the order of elements with css...?\n\t- Web typography\n\t\t- woff2 file `@font-face{ src: url(/fonts/roboto.woff2)\\nformat('woff2');...}`\n\t\t- You can control how a custom font loads...  `font-display: swap`\n\t\t\t- This should be used for most sites so that content doesn't have a delayed load.\n\t\t\t- Can use `optional` instead of `swap` to prevent flicker (and loading of font).\n\t\t\t- `system-ui` is a proper font-family\n\t\t- Fonts can have `font-variation-settings` kind of like shaders in rendering engines.\n\t- Fluid type \"is how you should do typography on the web\".\n\t\t- express a formula for setting font size and stuff without making concrete breakpoints?\n\t\t- `clamp`\n\t\t- Very cool way of doing typography.\n\t- Image son the web these days need multpile sources and stuff for different screen sizes.\n\t\t- Lots of considerations with images\n\t\t- Cloudinary handles images.  $\n\t\t\t- can use canonical image\n\t\t- use `srcset` with `sizes` attributes on an image.\n\t\t- Other tools with cloudinary\n\t\t\t-imgix and codepen (another one shown)...\n\t- \"Browsers are sneaky bastards\", they should abide by standards, the web is good as long as people are vigilant.\n","n":0.051}}},{"i":134,"$":{"0":{"v":"The Dark Forest: Private CRDTs as Global Database","n":0.354},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/brooklyn-zelenka)\n\n## Overview\n\n![Brooklyn Zelenka image](https://create-4jr.begin.app/_static/2022/brooklyn-zelenka.jpg){max-width: 300px}\n- name: Brooklyn Zelenka\n- [Speaker Page](https://2022.cascadiajs.com/speakers/brooklyn-zelenka)\n\n## Abstract\n\nP2P social networks, local-first apps, and resilient client-side apps need to be private, concurrent, BFT, and run everywhere. Let's look at some recent tools & techniques that make this even possible.\n\n## Notes\n\n![[talk.brooklyn-zelenka-the-dark-forest-private-crdts-as-global-database.*]]","n":0.139}}},{"i":135,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"\n- Brooklyn is co-founder and CTO of Fission Codes\n- Problem 1: The situation of Services in 2022\n  - Allow users to authenticated using Auth Service\n  - Sharing data across services (like from a photo service to music service) requires downloaing the data and re-sharing.\n- Problem 2: Too much in the way\n  - Browser\n  - REST\n  - Server\n  - Data Store\n  - DEvOps\n- Problem 3: Toxic Data\n  - 2005: Credit Card info in DB\n  - 2015: Personal Info in DB\n  - 2025: Nothing in DB\n- Suggestion 1: Networked Data, not apps.\n- Suggestion 2: Open Protocols\n  - HTTP has been open\n  - What if we get open protocols for\n    - Auth (interop without pre-negotiation)\n    - Data (ubiquitous dumb storage)\n    - Compute (local and remote lambdas)\n- Three techniques\n  - Content Addressing\n  - Private Data Substrate\n  - Fault-safe concurrency","n":0.086}}},{"i":136,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- speaker\n\t- cto of fission codes\n\t- working on lots of protocols\n- context for auth \n\t- theres a lot in th emiddle\n\t- lots of data is sensitive\n- networked data, not apsp\n- 3 techniques\n\t- global primary key (content hashing)\n\t- cryptrees/dark forest\n- content hashing\n\t- never change\n\t- *hard links for the web*\n\t- self verifying data\n- private data substrate\n\t- traditional: file system\n\t- new:\n\t\t- partitioned\n\t\t- persistent & versioning\n\t\t\t- feature but also implementation detail\n\t\t\t- just maps under the hood\n\t\t- private data\n\t\t\t- crypto is just transforming existing problems into key management problems\n\t\t\t- what changed: ubiquitous web crypto api \n\t\t\t\t- you can't extract keys using the api, only signing\n- offline access control\n\t- use hash tree vs trie\n- concurrent writes","n":0.094}}},{"i":137,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- @expede\n- Fission Codes\n- WNFS, Dialog, CAR Pool, PVM\n\n- Keeping data in a database is a bad idea.  See GDPR.\n    - If you don't store data you can't be persecuted for storing any data you shouldn't.\n\n- Networked Data, not apps\n    - Stuff comes first\n\n- Open protocols\n    - Auth: interop without pre-negotiation\n    - Data\n    - Compute\n\n- Global Primary Keys\n    - Content addressing\n        - Truly global links as opposed to ip addresses (physical location), DNS, networked routing for hashed data, \n        - Hard links vs soft links (url)\n        - Content IDs (CID)\n        - Seems to basically just be like a REST request, but instead of using an id, just use the hash of the object\n            - What do you do when you update the data, wouldn't its hash be updated?\n                - Brooklyn explains this.  All history is needed (wink wink blockchain)\n- Portable Private Data\n    - SublteCrypto(Web Crypto)\n        - Never gives direct access to the key\n        - Add an ownership node to the object\n- BFT Concurrency\n    - Over my head, something about color mixing, commutability, associative, and (does not change f(x) === f(f(x)));\n- See also CRDT","n":0.074}}},{"i":138,"$":{"0":{"v":"Making tech careers accessible for everyone","n":0.408},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/brittany-joiner)\n\n## Overview\n\n![Brittany Joiner image](https://create-4jr.begin.app/_static/2022/brittany-joiner.jpg){max-width: 300px}\n- name: Brittany Joiner\n- [Speaker Page](https://2022.cascadiajs.com/speakers/brittany-joiner)\n\n## Abstract\n\nIf you didn't 'grow up' coding or study comp sci at uni, you might have never considered a technical job. Yet it's totally possible for people midway through their non-technical career to become a developer. But why aren't more people doing it? I go through my journey from marketer to developer and explain the things that helped and hindered me. You'll learn why more folks don't do it and specific things we can all do to change that!\n\n## Notes\n\n![[talk.brittany-joiner-making-tech-careers-accessible-for-everyone.*]]\n","n":0.101}}},{"i":139,"$":{"0":{"v":"Trivikr","n":1},"1":{"v":"\n- History of Brittany\n  - Worked in marketing after university full time for 6 years.\n  - Now a full time engineer with Elastic.\n- Talk not only about women or specific groups. It's for helping people transition from non-tech to tech carrers.\n- Demographic results from StackOverflow 2022 survey: 84% straight, 92% male, 76% white/european\n- Harvard Business Review: Teams solve problems faster when they're more cognitively diverse.\n- Many people think that girls aren't into coding.\n- How do we know people are into programming or art: Ask them!\n- People who don't look like us can be interested in our field.\n- If you look different in your work area? Be loud, and proud.\n- People have limited view of Engineering.\n- Think outside the toolbox while hiring.\n- When someone is beautiful, people think \"everyone will do your work for you\"\n- Promote more low-cost courses and bootcamps. Sponsor a student!\n- The suggestion \"Just start coding and google when you get stuck\" is risky.\n- Not having brain power to code after a work day is difficult.\n- Lacking a supportive company or job environment is difficult.\n- Things to do\n  - Everyone\n    - Look for mentorship opportunities (or create one!)\n    - Introduce people to more light tech things\n    - Expand your definition of an engineer\n  - Traditional Path\n    - Show your mistakes\n    - Don't be a tech bro (or sis)\n  - Non-traditional Path\n    - Tell your story and what you do","n":0.066}}},{"i":140,"$":{"0":{"v":"Sleslein","n":1},"1":{"v":"\n- used to be a marketer, now a programmer!!\n- Story of journey\n- Common Roadblocks/perspectives\n\t- \"Girls aren't into coding\", ask them if their interested\n\t- Not seeing people like you.\n\t- limited view of what engineering is.  Much more broad then just writing code\n\t- Sexism is still a thing\n\t- Bootcamps are still not very accessible, expensive, very intense multi-month commitments.  Consider altcademy\n\t- \"Just start coding and google when you get stuck\", isn't helpful advice or encouragement.  Be specific, be willing to do it together, get to know the person, how they learn.\n\t- learning on the side is very difficult.  Esp. when you are working a FT job to make a living.\n\t- Lack of supportive company/job environment.\n\t\t- companies need to invest if having non-tech folks who are interested teck.  Better than hiring out\n- Action Items\n\t- Look for mentor opps\n\t- find \"under-represented\" people OUTSIDE of tech! \n\t\t- find people from non-technical back grounds.... they provide great perspective.  **Hire them over tech people and tech them the tech**\n\t- expand a definition of engineer\n\t- Intro people to more light tech things\n\t- **Show mistakes!**\n\t- Don't be a tech bro\n\t- Tell your story!","n":0.074}}},{"i":141,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n### Notes by [kevin](https://github.com/kevinslin)\n\n- made transition from marketing to tech\n- most people think they can't do this\n- where to find them?\n\t- nursing, education, etc\n- fresh perspectives\n\t- not just diff companies\n- stereotypes\n\t- don't assume, ask\n- limiting view of engineering\n\t- expand scope of definition\n- don't be too specific \n\t - eg. frontend react developer\n- bootcamps are hard to access\n\t- eg.\n\t\t- expensive\n\t\t- full time\n- just google it\n\t- not helpful in the beginning\n- not having brain power\n- supportive environment/peers\n- how to help\n\t- menotr\n\t- expand what it means to be engineer\n\t- help intro people\n\t- show your mistakes\n\t- don't be a tech bro/sis\n\t- tell your story","n":0.1}}},{"i":142,"$":{"0":{"v":"Hunt","n":1},"1":{"v":"\n- talk about transitioning into tech as an adult\n- marketing -> programmer\n- Innovation Engineer @ Elastic\n- Business Assistants, Nursing, etc., is where you find women to work in tech.\n- Cognitive Diversity improves problem solving\n- Parents and family shouldn't assume that their female family members aren't interested in tech.\n- See altacademy for low cost courses and bootcamps.  You can sponsor a student too.\n- Be specific with information to help people when they get started\n    - Create a list of resources that you think would be helpful for a new person.\n- Get to the know the style of the person you are mentoring.\n- Learning on the side is hard because \"brains need a break\".\n- People needa supportive company & job environment\n- Transition programs at a company (allow people to move into different fields (read: tech) while holding their current position)\n\n- Leaern to code slack channel\n- Introduce people to light tech things\n- Expand definition of an engineer\n- Show your mistakes\n- Don't be a tech bro\n\n@britt_joiner\nyoutube.com/c/brittanyjoiner\n\n\n[alt academy](https://www.altacademy.org/)\n","n":0.078}}},{"i":143,"$":{"0":{"v":"Aminamos","n":1},"1":{"v":"\n## Notes by [aminamos](https://github.com/aminamos)\n- many people don't have a linear path from compsci undergrad to software career\n- meet underrepresented groups where they are\n    - most of these groups are in caretaking roles\n- \"fresh perspectives\" means from another company or industry, but different roles creates cognitive diversity\n- roadblocks\n    - exposure is an issue/blocker, technical stuff provided to boys more often than girls - ask them if they care\n    - not seeing people in the role is a blocker\n    - be loud about who you are (if you feel comfortable/safe doing so)\n    - limited view of engineering, what it is, lots of types of roles that don't involve writing code all day\n- hiring managers - think outside the toolbox, screen for other skills and teach technical stuff later\n- don't be sexist or comment on people's ability based on how they look, gender, etc\n- most bootcamps are still inaccessible\n    - altcademy - promotes more low cost courses and bootcmaps\n    - (personal note: I usually recommend odin project because it's 100% free https://www.theodinproject.com/ and the various roadmaps for guidance https://github.com/kamranahmedse/developer-roadmap)\n- \"just start coding and google when you get stuck\"\n    - this is bad advice\n- hard to work all day then code in the evening\n- lacking supportive company/job environment\n    - not everyone can transition within the company\n    - Zapier and Adidas actively work to develop their employees, split time roles to eventually switch to a more technical role\n- getting stuck and feeling like you're the only person that gets stuck\n- create slack channel called \"learn-to-code\" and share resources, help people understand tech is more than building apps\n- if you got to tech on the traditional path, show your mistakes and don't be a tech evangelist(?)\n- if you're from the non-traditional path","n":0.059}}},{"i":144,"$":{"0":{"v":"Enhance your Functional Web Apps with Web Components","n":0.354},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/brian-leroux)\n\n## Overview\n\n![Brian Leroux image](https://create-4jr.begin.app/_static/2022/brian-leroux.jpg){max-width: 300px}\n- name: Brian Leroux\n- [Speaker Page](https://2022.cascadiajs.com/speakers/brian-leroux)\n\n## Abstract\n\nThe future is here! We can now model an entire system front to back with pure functions. Come to this talk to learn about applying functional programming concepts to the cloud, and the browser.\n\n## Notes\n\n","n":0.135}}},{"i":145,"$":{"0":{"v":"Kevinslin","n":1},"1":{"v":"\n\n### Notes by [kevin](https://github.com/kevinslin)\n\n\n- dependencies breaking is bad\n- Browsers broke stuff all the time back in the day, most browsers are backwards compatible now.\n- Build around what will not break in the next 10 years, not what you think will change.\n- additive changes help with not breaking things\n  - http1 -> http2\n  - xml http request -> fetch\n  - async/await\n  - `<script type=\"module\"></script>`\n  - woff -> woff2\n  - s3.listobjectsv2\n- lots of moving parts\n- Can we simplify? Yes! [progressive enhancement](https://en.wikipedia.org/wiki/Progressive_enhancement)\n  - Start working with HTML and add JS on top of that.\n  - good for accessibility, audience usage and also help with dependencies\n- framework are incorporating this\n  - [11ty](https://www.11ty.dev/), [remix](https://remix.run/), [astro](https://astro.build/)\n\nEnhance is a project built in the HTML first, JS and CSS on later manner.\n- api routes\n- its kind of like php, not a bad thing\n- file based routing with plain html\n- reuse markup wtih custom elements\n- built-in utilities\n- uses pure functions to return HTML components\n\n - Poor Man's Debugger - `JSON.stringify(state, null, 2)`","n":0.078}}},{"i":146,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Made a framework called [enhance](https://enhance.dev/docs/)\n- \"poor man's debugger\" `JSON.stringify(jsonobj, null, 2);\n- demos with the aws-sdk\n- \"The code is really chill\"\n\n\n","n":0.218}}},{"i":147,"$":{"0":{"v":"The Next Generation of Tech is on Tiktok","n":0.354},"1":{"v":"> The contents here is created from the official [CascadiaJS Page](https://2022.cascadiajs.com/speakers/aaroh-mankad)\n\n## Overview\n\n![Aaroh Mankad image](https://create-4jr.begin.app/_static/2022/aaroh-mankad.jpg){max-width: 300px}\n- name: Aaroh Mankad\n- [Speaker Page](https://2022.cascadiajs.com/speakers/aaroh-mankad)\n\n## Abstract\n\nThe next generation of tech is on Tiktok, and we need to do our best to ensure that they are exposed to a holistic picture of the industry and the people that work in it.\n\n## Notes","n":0.134}}},{"i":148,"$":{"0":{"v":"Hunter","n":1},"1":{"v":"\n- Thinks tiktok is a great way to build commmunity\n- Short form video platforms (SFV)\n- Making content is important\n- Compare with [[talk.joyce-lin-reverse-engineering-a-private-api]]'s talk on how tiktok is a spynet.\n- Made videos about what he spent money on\n- See mastadon?  \n- Twitter vs TikTok\n    - Video is more engaging and nuanced than text\n    - As the world gets higher bandwidth, the world gravitates to using higher-bandwidth software like TikTok\n- Instagram vs TikTok\n    - IG is a poser, copycat, and inauthentic.\n- Reddit vs TikTok\n    - Reddit is highly <?> and so it's easy to make hate content.  Unlike on TikTok.\n    - Subreddits take over purpose of the community.\n- TikTok vs SFV\n    - YouTube (YT) Shorts\n    - YT is video native\n    - formality is the enemy of authenticity\n    - assumes people on YT will want to make high quality content, but TikTok doesn't demand high quality content\n- Find super followers, cross spheres of interest, impact next generation, promote diversity\n- Tiktok for companies (not very accurate disclaimer)\n    - Prime top of funnel\n    - New Age of Search\n    - Word of mouth\n    - Casual Brand\n    - Good tiktokers...\n        - Joyce, Phong I Code, Emily Kager, \n\n@seattletechbro on tiktok\n@aarohmankad on twitter\n","n":0.072}}},{"i":149,"$":{"0":{"v":"CascadiaJS 2022 Notes","n":0.577},"1":{"v":"\n> Coming to the [Cascadia Startup Fair](https://2022.cascadiajs.com/conference/startup-fair)? Consider filling out the 2min Dendron PKM survey!\n![[home.user-survey#^begin]]\n\nWelcome traveler! You've arrived at the [Dendron](https://www.dendron.so/) workspace for [CascadiaJS 2022](https://2022.cascadiajs.com/)! Dendron is the open source knowledge base for developers. All pages here are published from plaintext markdown and managed using git and GitHub.\n\nYou can fork the [GitHub repo](https://github.com/dendronhq/cascadia-js-2022) to get offline access to all the talks of CascadiaJS 2022. \nIf you open this workspace using [VSCode](https://code.visualstudio.com/), you can use Dendron to navigate these notes as well as to add your own. \n\n![Dendron Workspace](https://ik.imagekit.io/fpjzhqpv1/Fullscreen_8_29_22__6_01_PM_-rO3FY3p9.png?ik-sdk-version=javascript-1.4.3&updatedAt=1661821303348)\n\n\n## Find speakers and talks\n\n### By Browsing\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/b9b0e77e4c204550852fd372d3d9e0af\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n### By Lookup\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/fa72444c2925431fb3e98971356fa590\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Take notes\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/2ba14ecbbf9543b8a0866c3aaf55e1fb\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Share the knowledge\n\nIf you feel inclined, you can also contribute your notes on talks back to this workspace by creating a pull request. Not only will this help others, every accepted pull request will also be entered into a [[raffle|home.raffle]] for an **iPad Air**!\n\n![[home.contributing#adding-notes,1]]\n\n## Be part of the conversation\n\nEvery talk has a discussions thread underneath powered by [GitHub discussions](https://giscus.app/). You can use this space to show speakers your appreciation and give feedback!\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/192095840b604cf8a2e79c78b1899572\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## About Us\nDendron is a YC backed startup that wants to help **humans organize information at scale**.  We are participating in the CascadiaJS [Startup Fair](https://2022.cascadiajs.com/conference/startup-fair#dendron) - please drop by to say hi and pick up stickers and goodies!\n\n> \"We are overwhelmed with information and we don't have the tools to properly index and filter through it. [The development of these tools, which] will give society access to and command over the inherited knowledge of the ages [should] be the first objective of our scientist\" - Vannevar Bush, 1945\n\n","n":0.054}}},{"i":150,"$":{"0":{"v":"Dendron Conference Survey","n":0.577},"1":{"v":"\nTake the [Dendron survey](https://airtable.com/shr4jCvgmkc83mz2C) to get a **Dendron Community Sticker** (come to the Dendron table) as well as a priority onboarding link to do a **personalized onboarding** with a Dendron team member. \n\n![Dendron Community Sticker](https://ik.imagekit.io/fpjzhqpv1/unknown_8ShT9EKuR.png?ik-sdk-version=javascript-1.4.3&updatedAt=1662079059257){max-width: 300px}\n![Dendron Survey QR Code](https://ik.imagekit.io/fpjzhqpv1/qr2_PQ3rZqO6p.png?ik-sdk-version=javascript-1.4.3&updatedAt=1662080883537)\n\n## Survey\n\n<iframe class=\"airtable-embed\" src=\"https://airtable.com/embed/shr4jCvgmkc83mz2C?backgroundColor=blue\" frameborder=\"0\" onmousewheel=\"\" width=\"100%\" height=\"533\" style=\"background: transparent; border: 1px solid #ccc;\"></iframe>","n":0.139}}},{"i":151,"$":{"0":{"v":"Reference","n":1},"1":{"v":"\nUseful links for Cascadia:\n\n- [Better Than LinkedIn Connection App](https://2022.cascadiajs.com/home/login?message=Please%20log-in)\n- [Music Playlist for Last day of conference](https://open.spotify.com/playlist/5rc784MVbKuZosmnZSRRmI?si=6zdm_8qqRx-yM55DZ7qB_g) (courtesy of Aaron Turner (he/him))\n\n## Day 2 Events\n- [Stargazing thread](https://discord.com/channels/853074440069578772/1015010603154276472/1015010620938129461)\n\n## Other\n- [Bend Recommendations](https://discord.com/channels/853074440069578772/993349096226168983/1013911730209951915)","n":0.186}}},{"i":152,"$":{"0":{"v":"Raffle","n":1},"1":{"v":"\n\nWe have the following items up for raffle during CascadiaJS 2022. Everyone that has a [[pull request|home.contributing]] merged by 8:00PM PDT Thursday will be eligible to win!\n\n### [iPad Air (M1)](https://www.apple.com/ipad-air/)\n![Mac Air](https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/ipad-air-select-202203?wid=3530&hei=4000&fmt=jpeg&qlt=90&.v=1645665079887){max-width: 300px}\n\n### [reMarkable 2](https://remarkable.com/store/remarkable-2)\n\n![reMarkable 2](https://cdn.sanity.io/images/0e4kwcjv/production/57a3c899716c25251654f71016ced22c9781f448-1416x1424.png?w=708&fm=webp&q=90){max-width: 400px}\n","n":0.167}}},{"i":153,"$":{"0":{"v":"Contributing","n":1},"1":{"v":"\n## Adding Notes\n\nThe easiest way to add notes is to click on the `Edit this page on GitHub` link at the bottom of each page.\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/1298b0c600db4cb394f68934766b7d2d\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n\n## Viewing Notes\n\n### Published Site\nYou can view notes by visiting the [published site]({{fm.homepage}}). \n\n### VSCode\n\nYou can use VSCode to clone and browse the notes locally. \n\n1. Clone the repo\n\t```sh\n\tgit clone https://github.com/dendronhq/cascadia-js-2022.git\n\t```\n1. Open with VSCode\n1. Install recommended extensions (if you miss the information toast, you can install Dendron [directly](https://marketplace.visualstudio.com/items?itemName=dendron.dendron))\n1. (Optional): Go through the Dendron 5min Tutorial (you will be prompted to go through this the first time you install Dendron). In case you miss the prompt, you can also find the tutorial on the [Dendron wiki](https://wiki.dendron.so/notes/678c77d9-ef2c-4537-97b5-64556d6337f1)\n\n### Codespaces\nYou can view and edit notes from your browser with the Dendron VSCode Web Extension. This lets you experiment with a subset of Dendron's functionality without needing to download VS Code.\n\n1. Go to https://github.com/dendronhq/cascadia-js-2022\n1. Hit `.`\n1. Install dendron in the extensions panel\n1. Start using `cmd+l` or `ctrl+l` to navigate the workspace.\n\n<div style=\"position: relative; padding-bottom: 64.5933014354067%; height: 0;\"><iframe src=\"https://www.loom.com/embed/2aee86c0d2024b2bac0b18f6da5c813d\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe></div>\n","n":0.07}}}]}
